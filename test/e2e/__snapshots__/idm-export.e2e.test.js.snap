// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo idm export "frodo idm export --all-separate --sort --directory testDir3 --entities-file test/e2e/env/testEntityFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files 1`] = `""`;

exports[`frodo idm export "frodo idm export --all-separate --sort --directory testDir3 --entities-file test/e2e/env/testEntityFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/repo.ds.json 1`] = `
{
  "_id": "repo.ds",
  "commands": {
    "delete-mapping-links": {
      "_queryFilter": "/linkType eq "\${mapping}"",
      "operation": "DELETE",
    },
    "delete-target-ids-for-recon": {
      "_queryFilter": "/reconId eq "\${reconId}"",
      "operation": "DELETE",
    },
  },
  "embedded": false,
  "ldapConnectionFactories": {
    "bind": {
      "availabilityCheckIntervalSeconds": 30,
      "availabilityCheckTimeoutMilliSeconds": 10000,
      "connectionPoolSize": 50,
      "connectionSecurity": "none",
      "heartBeatIntervalSeconds": 60,
      "heartBeatTimeoutMilliSeconds": 10000,
      "primaryLdapServers": [
        {
          "hostname": "userstore-0.userstore",
          "port": 1389,
        },
      ],
      "secondaryLdapServers": [
        {
          "hostname": "userstore-2.userstore",
          "port": 1389,
        },
      ],
    },
    "root": {
      "authentication": {
        "simple": {
          "bindDn": "\${admin}",
          "bindPassword": "&{userstore.password}",
        },
      },
      "inheritFrom": "bind",
    },
  },
  "maxConnectionAttempts": 5,
  "queries": {
    "explicit": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
    },
    "generic": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "get-by-field-value": {
        "_queryFilter": "/\${field} eq "\${value}"",
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq "\${userId}"",
        "_sortKeys": "-createDate",
      },
      "get-recons": {
        "_fields": "reconId,mapping,activitydate",
        "_queryFilter": "/entryType eq "summary"",
        "_sortKeys": "-activitydate",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq "\${instanceId}"",
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
      },
      "query-cluster-instances": {
        "_queryFilter": "true",
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1",
      },
    },
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
    },
    "explicitMapping": {
      "clusteredrecontargetids": {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-recon-clusteredTargetIds",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-recon-id",
            "type": "simple",
          },
          "targetIds": {
            "ldapAttribute": "fr-idm-recon-targetIds",
            "type": "json",
          },
        },
      },
      "dsconfig/attributeValue": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-attribute-value-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "matchAttribute": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-match-attribute",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/characterSet": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-character-set-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowUnclassifiedCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-allow-unclassified-characters",
            "type": "simple",
          },
          "characterSet": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-character-set",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minCharacterSets": {
            "ldapAttribute": "ds-cfg-min-character-sets",
            "type": "simple",
          },
        },
      },
      "dsconfig/dictionary": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-dictionary-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "dictionaryFile": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-dictionary-file",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/lengthBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-length-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxPasswordLength": {
            "ldapAttribute": "ds-cfg-max-password-length",
            "type": "simple",
          },
          "minPasswordLength": {
            "ldapAttribute": "ds-cfg-min-password-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/passwordPolicies": {
        "dnTemplate": "cn=Password Policies,cn=config",
        "objectClasses": [
          "ds-cfg-password-policy",
          "ds-cfg-authentication-policy",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowPreEncodedPasswords": {
            "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
            "type": "simple",
          },
          "defaultPasswordStorageScheme": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-default-password-storage-scheme",
            "type": "simple",
          },
          "deprecatedPasswordStorageScheme": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
            "type": "simple",
          },
          "maxPasswordAge": {
            "ldapAttribute": "ds-cfg-max-password-age",
            "type": "simple",
          },
          "passwordAttribute": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-password-attribute",
            "type": "simple",
          },
          "passwordHistoryCount": {
            "ldapAttribute": "ds-cfg-password-history-count",
            "type": "simple",
          },
          "validator": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-password-validator",
            "type": "simple",
          },
        },
      },
      "dsconfig/repeatedCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-repeated-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxConsecutiveLength": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-max-consecutive-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/similarityBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-similarity-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minPasswordDifference": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-password-difference",
            "type": "simple",
          },
        },
      },
      "dsconfig/uniqueCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-unique-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minUniqueCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-unique-characters",
            "type": "simple",
          },
        },
      },
      "dsconfig/userDefinedVirtualAttribute": {
        "dnTemplate": "cn=Virtual Attributes,cn=config",
        "objectClasses": [
          "ds-cfg-user-defined-virtual-attribute",
          "ds-cfg-virtual-attribute",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "attributeType": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-attribute-type",
            "type": "simple",
          },
          "baseDn": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-base-dn",
            "type": "simple",
          },
          "conflictBehavior": {
            "ldapAttribute": "ds-cfg-conflict-behavior",
            "type": "simple",
          },
          "enabled": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "filter": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-filter",
            "type": "simple",
          },
          "groupDn": {
            "ldapAttribute": "ds-cfg-group-dn",
            "type": "simple",
          },
          "javaClass": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "scope": {
            "ldapAttribute": "ds-cfg-scope",
            "type": "simple",
          },
          "value": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-value",
            "type": "simple",
          },
        },
      },
      "identities/admin": {
        "dnTemplate": "o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/alpha": {
        "dnTemplate": "o=alpha,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/bravo": {
        "dnTemplate": "o=bravo,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "fr-idm-internal-role",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "authzMembers": {
            "isMultiValued": true,
            "propertyName": "authzRoles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "condition": {
            "ldapAttribute": "fr-idm-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "name": {
            "ldapAttribute": "fr-idm-name",
            "type": "simple",
          },
          "privileges": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-privilege",
            "type": "json",
          },
          "temporalConstraints": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-temporal-constraints",
            "type": "json",
          },
        },
      },
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-internal-user",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "password": {
            "ldapAttribute": "fr-idm-password",
            "type": "json",
          },
        },
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-link",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "firstId": {
            "ldapAttribute": "fr-idm-link-firstId",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-link-qualifier",
            "type": "simple",
          },
          "linkType": {
            "ldapAttribute": "fr-idm-link-type",
            "type": "simple",
          },
          "secondId": {
            "ldapAttribute": "fr-idm-link-secondId",
            "type": "simple",
          },
        },
      },
      "locks": {
        "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-lock",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-lock-nodeid",
            "type": "simple",
          },
        },
      },
      "managed/teammember": {
        "dnTemplate": "ou=people,o=root,ou=identities",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "fraas-admin",
          "iplanet-am-user-service",
          "deviceProfilesContainer",
          "devicePrintProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/teammembermeta",
            "type": "reference",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "inviteDate": {
            "ldapAttribute": "fr-idm-inviteDate",
            "type": "simple",
          },
          "jurisdiction": {
            "ldapAttribute": "fr-idm-jurisdiction",
            "type": "simple",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "onboardDate": {
            "ldapAttribute": "fr-idm-onboardDate",
            "type": "simple",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/teammembergroup": {
        "dnTemplate": "ou=groups,o=root,ou=identities",
        "objectClasses": [
          "groupofuniquenames",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "ldapAttribute": "uniqueMember",
            "type": "simple",
          },
        },
      },
      "recon/assoc": {
        "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
        "namingStrategy": {
          "dnAttribute": "fr-idm-reconassoc-reconid",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "fr-idm-reconassoc",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "fr-idm-reconassoc-reconid",
            "type": "simple",
          },
          "finishTime": {
            "ldapAttribute": "fr-idm-reconassoc-finishtime",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "subResources": {
          "entry": {
            "namingStrategy": {
              "dnAttribute": "uid",
              "type": "clientDnNaming",
            },
            "resource": "recon-assoc-entry",
            "type": "collection",
          },
        },
      },
      "recon/assoc/entry": {
        "objectClasses": [
          "uidObject",
          "fr-idm-reconassocentry",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "action": {
            "ldapAttribute": "fr-idm-reconassocentry-action",
            "type": "simple",
          },
          "ambiguousTargetObjectIds": {
            "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
            "type": "simple",
          },
          "exception": {
            "ldapAttribute": "fr-idm-reconassocentry-exception",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "message": {
            "ldapAttribute": "fr-idm-reconassocentry-message",
            "type": "simple",
          },
          "messageDetail": {
            "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
            "type": "simple",
          },
          "phase": {
            "ldapAttribute": "fr-idm-reconassocentry-phase",
            "type": "simple",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-reconassocentry-reconid",
            "type": "simple",
          },
          "situation": {
            "ldapAttribute": "fr-idm-reconassocentry-situation",
            "type": "simple",
          },
          "sourceObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "status": {
            "ldapAttribute": "fr-idm-reconassocentry-status",
            "type": "simple",
          },
          "targetObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "resourceName": "recon-assoc-entry",
        "subResourceRouting": [
          {
            "prefix": "entry",
            "template": "recon/assoc/{reconId}/entry",
          },
        ],
      },
      "sync/queue": {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-syncqueue",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "context": {
            "ldapAttribute": "fr-idm-syncqueue-context",
            "type": "json",
          },
          "createDate": {
            "ldapAttribute": "fr-idm-syncqueue-createdate",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-syncqueue-mapping",
            "type": "simple",
          },
          "newObject": {
            "ldapAttribute": "fr-idm-syncqueue-newobject",
            "type": "json",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-syncqueue-nodeid",
            "type": "simple",
          },
          "objectRev": {
            "ldapAttribute": "fr-idm-syncqueue-objectRev",
            "type": "simple",
          },
          "oldObject": {
            "ldapAttribute": "fr-idm-syncqueue-oldobject",
            "type": "json",
          },
          "remainingRetries": {
            "ldapAttribute": "fr-idm-syncqueue-remainingretries",
            "type": "simple",
          },
          "resourceCollection": {
            "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
            "type": "simple",
          },
          "resourceId": {
            "ldapAttribute": "fr-idm-syncqueue-resourceid",
            "type": "simple",
          },
          "state": {
            "ldapAttribute": "fr-idm-syncqueue-state",
            "type": "simple",
          },
          "syncAction": {
            "ldapAttribute": "fr-idm-syncqueue-syncaction",
            "type": "simple",
          },
        },
      },
    },
    "genericMapping": {
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
        "objectClasses": [
          "uidObject",
          "fr-idm-cluster-obj",
        ],
      },
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
      },
      "file": {
        "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
      },
      "internal/notification": {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-notification-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-notification",
        ],
        "properties": {
          "target": {
            "propertyName": "_notifications",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "internal/usermeta": {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "jsonstorage": {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
      },
      "managed/alpha_group": {
        "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_organization": {
        "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/alpha_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
        },
      },
      "managed/alpha_role": {
        "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_user": {
        "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/alpha_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/alpha_usermeta": {
        "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_group": {
        "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_organization": {
        "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/bravo_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
        },
      },
      "managed/bravo_role": {
        "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_user": {
        "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/bravo_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/bravo_usermeta": {
        "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/teammembermeta": {
        "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/teammember",
            "type": "reverseReference",
          },
        },
      },
      "reconprogressstate": {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
        "objectClasses": [
          "uidObject",
          "fr-idm-relationship",
        ],
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "ui/*": {
        "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
      },
    },
  },
  "rest2LdapOptions": {
    "mvccAttribute": "etag",
    "readOnUpdatePolicy": "controls",
    "returnNullForMissingProperties": true,
    "useMvcc": true,
    "usePermissiveModify": true,
    "useSubtreeDelete": true,
  },
  "security": {
    "keyManager": "jvm",
    "trustManager": "jvm",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --sort --directory testDir3 --entities-file test/e2e/env/testEntityFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/script.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": "\${groovy}",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{\${installDir}}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{\${installDir}}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{\${installDir}}/bin/defaults/script",
    },
    "install": {
      "directory": "&{\${installDir}}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --name script": should export the idm config entity with idm id "script" 1`] = `""`;

exports[`frodo idm export "frodo idm export --name script": should export the idm config entity with idm id "script": ./script.idm.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory 1`] = `""`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/access.json 1`] = `
{
  "_id": "access",
  "configs": [
    {
      "actions": "*",
      "methods": "read",
      "pattern": "info/*",
      "roles": "*",
    },
    {
      "actions": "login,logout",
      "methods": "read,action",
      "pattern": "authentication",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/fidc/*",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "*",
      "pattern": "config/fidc/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/themeconfig",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/themerealm",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/uilocale/*",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/fieldPolicy/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "info/uiconfig",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/dashboard",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "query",
      "pattern": "info/features",
      "roles": "*",
    },
    {
      "actions": "listPrivileges",
      "methods": "action",
      "pattern": "privilege",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "privilege/*",
      "roles": "*",
    },
    {
      "actions": "validate",
      "methods": "action",
      "pattern": "util/validateQueryFilter",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "checkIfAnyFeatureEnabled('kba')",
      "methods": "read",
      "pattern": "selfservice/kba",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "schema/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "action,query",
      "pattern": "consent",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "excludePatterns": "repo,repo/*,file/iwa/*",
      "methods": "*",
      "pattern": "*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "",
      "methods": "create,read,update,delete,patch,query",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "methods": "script",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
      "methods": "action",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "customAuthz": "disallowCommandAction()",
      "methods": "*",
      "pattern": "repo",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "customAuthz": "disallowCommandAction()",
      "methods": "*",
      "pattern": "repo/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "command",
      "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
      "methods": "action",
      "pattern": "repo/link",
      "roles": "internal/role/openidm-admin",
    },
    {
      "methods": "create,read,query,patch",
      "pattern": "managed/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read,query",
      "pattern": "internal/role/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "create,read,action,update",
      "pattern": "profile/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "read,action",
      "pattern": "policy/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "schema/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "action,query",
      "pattern": "consent",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "selfservice/kba",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "selfservice/terms",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "identityProviders",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "sendTemplate",
      "methods": "action",
      "pattern": "external/email",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "authenticate",
      "methods": "action",
      "pattern": "system/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "read,action",
      "pattern": "policy/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "bind,unbind",
      "customAuthz": "ownDataOnly()",
      "methods": "read,action,delete",
      "pattern": "*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
      "methods": "update,patch,action",
      "pattern": "*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
      "methods": "patch,action",
      "pattern": "selfservice/user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "endpoint/getprocessesforuser",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "query",
      "pattern": "endpoint/gettasksview",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "complete",
      "customAuthz": "isMyTask()",
      "methods": "action",
      "pattern": "workflow/taskinstance/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "canUpdateTask()",
      "methods": "read,update",
      "pattern": "workflow/taskinstance/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "isAllowedToStartProcess()",
      "methods": "create",
      "pattern": "workflow/processinstance",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "read",
      "customAuthz": "isOneOfMyWorkflows()",
      "methods": "*",
      "pattern": "workflow/processdefinition/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
      "methods": "patch,action",
      "pattern": "managed/user",
      "roles": "internal/role/openidm-cert",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationship()",
      "methods": "read",
      "pattern": "internal/usermeta/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationship()",
      "methods": "read,delete",
      "pattern": "internal/notification/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "",
      "customAuthz": "ownDataOnly()",
      "methods": "read,delete",
      "pattern": "managed/alpha_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
      "methods": "update,patch,action",
      "pattern": "managed/alpha_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/alpha_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "",
      "customAuthz": "ownDataOnly()",
      "methods": "read,delete",
      "pattern": "managed/bravo_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
      "methods": "update,patch,action",
      "pattern": "managed/bravo_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/bravo_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "deleteNotificationsForTarget",
      "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
      "methods": "action",
      "pattern": "notification",
      "roles": "internal/role/openidm-authorized",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/alphaOrgPrivileges.json 1`] = `
{
  "_id": "alphaOrgPrivileges",
  "privileges": [
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
      "name": "owner-view-update-delete-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "owner-create-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "owner-view-update-delete-admins-and-members",
      "path": "managed/alpha_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
      "name": "owner-create-admins",
      "path": "managed/alpha_user",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
      "name": "admin-view-update-delete-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "admin-create-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "admin-view-update-delete-members",
      "path": "managed/alpha_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
      "name": "admin-create-members",
      "path": "managed/alpha_user",
      "permissions": [
        "CREATE",
      ],
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/apiVersion.json 1`] = `
{
  "_id": "apiVersion",
  "warning": {
    "enabled": {
      "$bool": "&{openidm.apiVersion.warning.enabled|false}",
    },
    "includeScripts": {
      "$bool": "&{openidm.apiVersion.warning.includeScripts|false}",
    },
    "logFilterResourcePaths": [
      "audit",
      "authentication",
      "cluster",
      "config",
      "consent",
      "csv",
      "external/rest",
      "identityProviders",
      "info",
      "internal",
      "internal/role",
      "internal/user",
      "internal/usermeta",
      "managed",
      "managed/assignment",
      "managed/organization",
      "managed/role",
      "managed/user",
      "notification",
      "policy",
      "privilege",
      "profile",
      "recon",
      "recon/assoc",
      "repo",
      "selfservice/kba",
      "selfservice/terms",
      "scheduler/job",
      "scheduler/trigger",
      "schema",
      "sync",
      "sync/mappings",
      "system",
      "taskscanner",
    ],
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/audit.json 1`] = `
{
  "_id": "audit",
  "auditServiceConfig": {
    "availableAuditEventHandlers": [
      "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
      "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
      "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
      "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
      "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
      "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
      "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
      "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
      "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler",
    ],
    "caseInsensitiveFields": [
      "/access/http/request/headers",
      "/access/http/response/headers",
    ],
    "filterPolicies": {
      "value": {
        "excludeIf": [
          "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
          "/access/http/request/cookies/session-jwt",
          "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
          "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
          "/access/http/request/headers/accept-encoding",
          "/access/http/request/headers/accept-language",
          "/access/http/request/headers/Authorization",
          "/access/http/request/headers/cache-control",
          "/access/http/request/headers/connection",
          "/access/http/request/headers/content-length",
          "/access/http/request/headers/content-type",
          "/access/http/request/headers/proxy-authorization",
          "/access/http/request/headers/X-OpenAM-Password",
          "/access/http/request/headers/X-OpenIDM-Password",
          "/access/http/request/queryParameters/access_token",
          "/access/http/request/queryParameters/IDToken1",
          "/access/http/request/queryParameters/id_token_hint",
          "/access/http/request/queryParameters/Login.Token1",
          "/access/http/request/queryParameters/redirect_uri",
          "/access/http/request/queryParameters/requester",
          "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
          "/access/http/request/queryParameters/tokenId",
          "/access/http/response/headers/Authorization",
          "/access/http/response/headers/Set-Cookie",
          "/access/http/response/headers/X-OpenIDM-Password",
        ],
        "includeIf": [],
      },
    },
    "handlerForQueries": "json",
  },
  "eventHandlers": [
    {
      "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
      "config": {
        "name": "json",
        "topics": [
          "access",
          "activity",
          "sync",
          "authentication",
          "config",
        ],
      },
    },
    {
      "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
      "config": {
        "enabled": false,
        "name": "repo",
        "topics": [
          "access",
          "activity",
          "sync",
          "authentication",
          "config",
        ],
      },
    },
  ],
  "eventTopics": {
    "activity": {
      "filter": {
        "actions": [
          "create",
          "update",
          "delete",
          "patch",
          "action",
        ],
      },
      "passwordFields": [
        "password",
      ],
      "watchedFields": [],
    },
    "config": {
      "filter": {
        "actions": [
          "create",
          "update",
          "delete",
          "patch",
          "action",
        ],
      },
    },
  },
  "exceptionFormatter": {
    "file": "bin/defaults/script/audit/stacktraceFormatter.js",
    "type": "text/javascript",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/auth.profile.json 1`] = `
{
  "_id": "auth.profile",
  "authenticationRole": "internal/role/openidm-authenticated",
  "authorizationRole": "internal/role/openidm-authorized",
  "profileEnhancementProcesses": [
    "selfservice/termsAndConditions",
    "selfservice/kbaUpdate",
    "selfservice/profile",
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/authentication.json 1`] = `
{
  "_id": "authentication",
  "rsFilter": {
    "anonymousUserMapping": {
      "localUser": "internal/user/anonymous",
      "roles": [
        "internal/role/openidm-reg",
      ],
      "userRoles": "authzRoles/*",
    },
    "augmentSecurityContext": {
      "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
      "type": "text/javascript",
    },
    "cache": {
      "maxTimeout": "300 seconds",
    },
    "clientId": "&{rsfilter.resource.server.client.id}",
    "clientSecret": "&{rsfilter.resource.server.secret}",
    "scopes": [
      "fr:idm:*",
    ],
    "staticUserMapping": [
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "amadmin",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/idm-provisioning",
        "roles": [
          "internal/role/platform-provisioning",
        ],
        "subject": "idm-provisioning",
      },
      {
        "localUser": "internal/user/idm-provisioning",
        "subject": "RCSClient",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "23281ea7-739b-4fd1-b953-eaae73a2b497",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "86fca6d7-2f52-4524-92c6-b6f416071455",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "d4c3ecbc-4b03-4ad5-b32f-464bda442e3f",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "49a2981c-e192-4739-a0e6-c7582168bdf5",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/idm-provisioning",
        "roles": [
          "internal/role/openidm-admin",
        ],
        "subject": "autoid-resource-server",
      },
    ],
    "subjectMapping": [
      {
        "defaultRoles": [
          "internal/role/openidm-authorized",
        ],
        "propertyMapping": {
          "sub": "_id",
        },
        "queryOnResource": "managed/teammember",
        "realm": "/",
        "userRoles": "authzRoles/*",
      },
      {
        "additionalUserFields": [
          "adminOfOrg",
          "ownerOfOrg",
        ],
        "defaultRoles": [
          "internal/role/openidm-authorized",
        ],
        "propertyMapping": {
          "sub": "_id",
        },
        "queryOnResource": "managed/{{substring realm 1}}_user",
        "userRoles": "authzRoles/*",
      },
    ],
    "tokenIntrospectUrl": "http://am.fr-platform/am/oauth2/introspect",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/bravoOrgPrivileges.json 1`] = `
{
  "_id": "bravoOrgPrivileges",
  "privileges": [
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
      "name": "owner-view-update-delete-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "owner-create-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "owner-view-update-delete-admins-and-members",
      "path": "managed/bravo_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
      "name": "owner-create-admins",
      "path": "managed/bravo_user",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
      "name": "admin-view-update-delete-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "admin-create-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "admin-view-update-delete-members",
      "path": "managed/bravo_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
      "name": "admin-create-members",
      "path": "managed/bravo_user",
      "permissions": [
        "CREATE",
      ],
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/cluster.json 1`] = `
{
  "_id": "cluster",
  "enabled": true,
  "instanceCheckInInterval": 5000,
  "instanceCheckInOffset": 0,
  "instanceId": "&{openidm.node.id}",
  "instanceRecoveryTimeout": 30000,
  "instanceTimeout": 30000,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.email.json 1`] = `
{
  "_id": "external.email",
  "auth": {
    "enable": true,
    "password": "&{sendgrid.api.key}",
    "username": "apikey",
  },
  "connectiontimeout": 300000,
  "debug": false,
  "from": "&{email.sender.address}",
  "host": "smtp.sendgrid.net",
  "port": 587,
  "smtpProperties": [],
  "ssl": {
    "enable": false,
  },
  "starttls": {
    "enable": true,
  },
  "threadPoolSize": 20,
  "timeout": 300000,
  "writetimeout": 300000,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.emailDefault.json 1`] = `
{
  "_id": "external.emailDefault",
  "auth": {
    "enable": true,
    "password": "&{sendgrid.api.key}",
    "username": "apikey",
  },
  "connectiontimeout": 300000,
  "debug": false,
  "from": "&{email.sender.address}",
  "host": "smtp.sendgrid.net",
  "port": 587,
  "smtpProperties": [],
  "ssl": {
    "enable": false,
  },
  "starttls": {
    "enable": true,
  },
  "threadPoolSize": 20,
  "timeout": 300000,
  "writetimeout": 300000,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.rest.json 1`] = `
{
  "_id": "external.rest",
  "hostnameVerifier": "&{openidm.external.rest.hostnameVerifier}",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/felix.webconsole.json 1`] = `
{
  "_id": "felix.webconsole",
  "password": "&{openidm.felix.webconsole.password|admin}",
  "username": "&{openidm.felix.webconsole.username|admin}",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/identityProviders.json 1`] = `
{
  "_id": "identityProviders",
  "providers": [
    {
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oidc.OpenIDConnectClientConfiguration",
      "propertyMap": [
        {
          "source": "sub",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "given_name",
          "target": "givenName",
        },
        {
          "source": "family_name",
          "target": "familyName",
        },
        {
          "source": "picture",
          "target": "photoUrl",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "locale",
          "target": "locale",
        },
      ],
      "provider": "google",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Google",
        "order": [
          "sub",
          "name",
          "given_name",
          "family_name",
          "picture",
          "email",
          "locale",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "family_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "given_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "locale": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Profile Picture URL",
            "searchable": true,
            "title": "Profile Picture URL",
            "type": "string",
            "viewable": true,
          },
          "sub": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Google",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "openid",
        "profile",
        "email",
      ],
      "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "Google",
        "buttonImage": "images/g-logo.png",
        "iconBackground": "#4184f3",
        "iconClass": "fa-google",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
      "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://www.facebook.com/dialog/oauth",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "first_name",
          "target": "givenName",
        },
        {
          "source": "last_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "locale",
          "target": "locale",
        },
        {
          "source": "picture",
          "target": "photoUrl",
          "transform": {
            "source": "source.data.url",
            "type": "text/javascript",
          },
        },
      ],
      "provider": "facebook",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Facebook",
        "order": [
          "id",
          "name",
          "first_name",
          "last_name",
          "email",
          "locale",
          "picture",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "first_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "last_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "locale": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Picture",
            "searchable": true,
            "title": "Picture",
            "type": "object",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Facebook",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "email",
        "user_birthday",
      ],
      "tokenEndpoint": "https://graph.facebook.com/v2.7/oauth/access_token",
      "uiConfig": {
        "buttonClass": "fa-facebook-official",
        "buttonCustomStyle": "background-color: #3b5998;border-color: #3b5998; color: white;",
        "buttonCustomStyleHover": "background-color: #334b7d;border-color: #334b7d; color: white;",
        "buttonDisplayName": "Facebook",
        "buttonImage": "",
        "iconBackground": "#3b5998",
        "iconClass": "fa-facebook",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://graph.facebook.com/me?fields=id,name,picture,email,first_name,last_name,locale",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://www.linkedin.com/oauth/v2/authorization",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "formattedName",
          "target": "displayName",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "familyName",
        },
        {
          "source": "emailAddress",
          "target": "email",
        },
        {
          "source": "emailAddress",
          "target": "username",
        },
        {
          "source": "location",
          "target": "locale",
          "transform": {
            "source": "source.country.code",
            "type": "text/javascript",
          },
        },
        {
          "source": "pictureUrl",
          "target": "photoUrl",
        },
      ],
      "provider": "linkedIn",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:LinkedIn",
        "order": [
          "id",
          "formattedName",
          "emailAddress",
          "firstName",
          "lastName",
          "location",
        ],
        "properties": {
          "emailAddress": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "firstName": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "formattedName": {
            "description": "Formatted Name",
            "searchable": true,
            "title": "Formatted Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": false,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "lastName": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "location": {
            "description": "Location",
            "properties": {
              "country": {
                "description": "Country",
                "properties": {
                  "code": {
                    "description": "Locale Code",
                    "title": "Locale Code",
                    "type": "string",
                  },
                },
                "title": "Country",
                "type": "object",
              },
              "name": {
                "description": "Area Name",
                "title": "Area Name",
                "type": "string",
              },
            },
            "searchable": true,
            "title": "Location",
            "type": "object",
            "viewable": true,
          },
          "pictureUrl": {
            "description": "Picture URL",
            "searchable": true,
            "title": "Picture URL",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "LinkedIn",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "r_basicprofile",
        "r_emailaddress",
      ],
      "tokenEndpoint": "https://www.linkedin.com/oauth/v2/accessToken",
      "uiConfig": {
        "buttonClass": "fa-linkedin",
        "buttonCustomStyle": "background-color:#0077b5;border-color:#0077b5;color:white;",
        "buttonCustomStyleHover": "background-color:#006ea9; border-color:#006ea9;color:white;",
        "buttonDisplayName": "LinkedIn",
        "buttonImage": "",
        "iconBackground": "#0077b5",
        "iconClass": "fa-linkedin",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.linkedin.com/v1/people/~:(id,formatted-name,first-name,last-name,email-address,location,picture-url)?format=json",
    },
    {
      "authenticationIdKey": "user_id",
      "authorizationEndpoint": "https://www.amazon.com/ap/oa",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "enabled": false,
      "propertyMap": [
        {
          "source": "user_id",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
      ],
      "provider": "amazon",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Amazon",
        "order": [
          "user_id",
          "name",
          "email",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "user_id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Amazon",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "profile",
      ],
      "tokenEndpoint": "https://api.amazon.com/auth/o2/token",
      "uiConfig": {
        "buttonClass": "fa-amazon",
        "buttonCustomStyle": "background: linear-gradient(to bottom, #f7e09f 15%,#f5c646 85%);color: black;border-color: #b48c24;",
        "buttonCustomStyleHover": "background: linear-gradient(to bottom, #f6c94e 15%,#f6c94e 85%);color: black;border-color: #b48c24;",
        "buttonDisplayName": "Amazon",
        "buttonImage": "",
        "iconBackground": "#f0c14b",
        "iconClass": "fa-amazon",
        "iconFontColor": "black",
      },
      "userInfoEndpoint": "https://api.amazon.com/user/profile",
    },
    {
      "authenticationIdKey": "username",
      "authorizationEndpoint": "https://public-api.wordpress.com/oauth2/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "enabled": false,
      "propertyMap": [
        {
          "source": "username",
          "target": "username",
        },
        {
          "source": "username",
          "target": "id",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "avatar_URL",
          "target": "photoUrl",
        },
        {
          "source": "display_name",
          "target": "displayName",
        },
      ],
      "provider": "wordpress",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Wordpress",
        "order": [
          "username",
          "email",
          "display_name",
          "avatar_URL",
        ],
        "properties": {
          "avatar_URL": {
            "description": "Avatar Url",
            "searchable": true,
            "title": "Avatar Url",
            "type": "string",
            "viewable": true,
          },
          "display_name": {
            "description": "Display Name",
            "searchable": true,
            "title": "Display Name",
            "type": "string",
            "viewable": true,
          },
          "email": {
            "description": "email",
            "searchable": true,
            "title": "email",
            "type": "string",
            "viewable": true,
          },
          "username": {
            "description": "username",
            "searchable": true,
            "title": "username",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Wordpress",
        "type": "object",
        "username": "http://jsonschema.net",
        "viewable": true,
      },
      "scope": [
        "auth",
      ],
      "tokenEndpoint": "https://public-api.wordpress.com/oauth2/token",
      "uiConfig": {
        "buttonClass": "fa-wordpress",
        "buttonCustomStyle": "background-color: #0095cc; border-color: #0095cc; color:white;",
        "buttonCustomStyleHover": "background-color: #0095cc; border-color: #0095cc; color:white;",
        "buttonDisplayName": "WordPress",
        "buttonImage": "",
        "iconBackground": "#0095cc",
        "iconClass": "fa-wordpress",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://public-api.wordpress.com/rest/v1.1/me/",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "displayName",
          "target": "displayName",
        },
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "surname",
          "target": "familyName",
        },
        {
          "source": "userPrincipalName",
          "target": "email",
        },
        {
          "source": "userPrincipalName",
          "target": "username",
        },
      ],
      "provider": "microsoft",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Microsoft",
        "order": [
          "id",
          "displayName",
          "userPrincipalName",
          "givenName",
          "surname",
        ],
        "properties": {
          "displayName": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "givenName": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": false,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "surname": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "userPrincipalName": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Microsoft",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "User.Read",
      ],
      "tokenEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft",
        "buttonImage": "images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://graph.microsoft.com/v1.0/me",
    },
    {
      "apiVersion": "5.73",
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://oauth.vk.com/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.vk.VKClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "first_name",
          "target": "displayName",
        },
        {
          "source": "first_name",
          "target": "givenName",
        },
        {
          "source": "last_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "photo_50",
          "target": "photoUrl",
        },
      ],
      "provider": "vkontakte",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Vkontakte",
        "order": [
          "id",
          "name",
          "last_name",
          "first_name",
          "email",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "first_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "last_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "photo_50": {
            "description": "Photo URL",
            "searchable": true,
            "title": "Photo URL",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "email",
      ],
      "tokenEndpoint": "https://oauth.vk.com/access_token",
      "uiConfig": {
        "buttonClass": "fa-vk",
        "buttonCustomStyle": "background-color: #4c75a3; border-color: #4c75a3;color: white;",
        "buttonCustomStyleHover": "background-color: #43658c; border-color: #43658c;color: white;",
        "buttonDisplayName": "VK",
        "buttonImage": "",
        "iconBackground": "#4c75a3",
        "iconClass": "fa-vk",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.vk.com/method/users.get?fields=photo_50",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://api.instagram.com/oauth/authorize/",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.instagram.InstagramClientConfiguration",
      "connectionTimeout": 0,
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "full_name",
          "target": "displayName",
        },
        {
          "source": "profile_picture",
          "target": "photoUrl",
        },
        {
          "source": "username",
          "target": "username",
        },
      ],
      "provider": "instagram",
      "readTimeout": 0,
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Instagram",
        "order": [
          "id",
          "full_name",
          "profile_picture",
          "photoUrl",
          "username",
        ],
        "properties": {
          "full_name": {
            "description": "Full Name",
            "searchable": true,
            "title": "Full Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "profile_picture": {
            "description": "Profile Picture URL",
            "searchable": true,
            "title": "Profile Picture URL",
            "type": "string",
            "viewable": true,
          },
          "username": {
            "description": "Username",
            "searchable": true,
            "title": "Username",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "basic",
        "public_content",
      ],
      "tokenEndpoint": "https://api.instagram.com/oauth/access_token",
      "uiConfig": {
        "buttonClass": "fa-instagram",
        "buttonCustomStyle": "background-color: #3f729b; border-color: #3f729b;color: white;",
        "buttonCustomStyleHover": "background-color: #305777; border-color: #305777;color: white;",
        "buttonDisplayName": "Instagram",
        "buttonImage": "",
        "iconBackground": "#3f729b",
        "iconClass": "fa-instagram",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.instagram.com/v1/users/self/",
    },
    {
      "authenticationIdKey": "openid",
      "authorizationEndpoint": "https://open.weixin.qq.com/connect/qrconnect",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.wechat.WeChatClientConfiguration",
      "connectionTimeout": 0,
      "propertyMap": [
        {
          "source": "openid",
          "target": "id",
        },
        {
          "source": "nickname",
          "target": "displayName",
        },
        {
          "source": "nickname",
          "target": "username",
        },
        {
          "source": "headimgurl",
          "target": "photoUrl",
        },
      ],
      "provider": "wechat",
      "readTimeout": 0,
      "redirectUri": "https://localhost:8443/",
      "refreshTokenEndpoint": "https://api.wechat.com/sns/oauth2/refresh_token",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Wechat",
        "order": [
          "openid",
          "nickname",
          "headimgurl",
        ],
        "properties": {
          "headimgurl": {
            "description": "Profile Picture URL",
            "searchable": true,
            "title": "Profile Picture URL",
            "type": "string",
            "viewable": true,
          },
          "nickname": {
            "description": "Username",
            "searchable": true,
            "title": "Username",
            "type": "string",
            "viewable": true,
          },
          "openid": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "snsapi_login",
      ],
      "tokenEndpoint": "https://api.wechat.com/sns/oauth2/access_token",
      "uiConfig": {
        "buttonClass": "fa-wechat",
        "buttonCustomStyle": "background-color: #09b507; border-color: #09b507;color: white;",
        "buttonCustomStyleHover": "background-color: #09a007; border-color: #09a007;color: white;",
        "buttonDisplayName": "WeChat",
        "buttonImage": "",
        "iconBackground": "#09b507",
        "iconClass": "fa-wechat",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.wechat.com/sns/userinfo",
    },
    {
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://api.login.yahoo.com/oauth2/request_auth",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oidc.OpenIDConnectClientConfiguration",
      "propertyMap": [
        {
          "source": "sub",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "given_name",
          "target": "givenName",
        },
        {
          "source": "family_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "locale",
          "target": "locale",
        },
        {
          "source": "picture",
          "target": "photoUrl",
        },
      ],
      "provider": "yahoo",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Yahoo",
        "order": [
          "sub",
          "name",
          "given_name",
          "family_name",
          "email",
          "locale",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "family_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "given_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "locale": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Profile Photo URL",
            "searchable": true,
            "title": "Profile Photo URL",
            "type": "string",
            "viewable": true,
          },
          "sub": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "openid",
        "sdpp-w",
      ],
      "tokenEndpoint": "https://api.login.yahoo.com/oauth2/get_token",
      "uiConfig": {
        "buttonClass": "fa-yahoo",
        "buttonCustomStyle": "background-color: #7B0099; border-color: #7B0099; color:white;",
        "buttonCustomStyleHover": "background-color: #7B0099; border-color: #7B0099; color:white;",
        "buttonDisplayName": "Yahoo",
        "buttonImage": "",
        "iconBackground": "#7B0099",
        "iconClass": "fa-yahoo",
        "iconFontColor": "white",
      },
      "wellKnownEndpoint": "https://login.yahoo.com/.well-known/openid-configuration",
    },
    {
      "authenticationIdKey": "user_id",
      "authorizationEndpoint": "https://login.salesforce.com/services/oauth2/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "user_id",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "given_name",
          "target": "givenName",
        },
        {
          "source": "family_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "zoneInfo",
          "target": "locale",
        },
        {
          "source": "picture",
          "target": "photoUrl",
        },
      ],
      "provider": "salesforce",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Salesforce",
        "order": [
          "user_id",
          "name",
          "given_name",
          "family_name",
          "email",
          "zoneInfo",
          "picture",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "family_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "given_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Picture URL",
            "searchable": true,
            "title": "Picture URL",
            "type": "string",
            "viewable": true,
          },
          "user_id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "zoneInfo": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Salesforce",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "id",
        "api",
        "web",
      ],
      "tokenEndpoint": "https://login.salesforce.com/services/oauth2/token",
      "uiConfig": {
        "buttonClass": "fa-cloud",
        "buttonCustomStyle": "background-color: #21a0df; border-color: #21a0df; color: white;",
        "buttonCustomStyleHover": "background-color: #21a0df; border-color: #21a0df; color: white;",
        "buttonDisplayName": "Salesforce",
        "buttonImage": "",
        "iconBackground": "#21a0df",
        "iconClass": "fa-cloud",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://login.salesforce.com/services/oauth2/userinfo",
    },
    {
      "authenticationIdKey": "id_str",
      "authorizationEndpoint": "https://api.twitter.com/oauth/authenticate",
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.twitter.TwitterClientConfiguration",
      "propertyMap": [
        {
          "source": "id_str",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "screen_name",
          "target": "username",
        },
        {
          "source": "profile_image_url",
          "target": "photoUrl",
        },
      ],
      "provider": "twitter",
      "redirectUri": "https://localhost:8443/",
      "requestTokenEndpoint": "https://api.twitter.com/oauth/request_token",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Twitter",
        "order": [
          "id_str",
          "name",
          "screen_name",
          "email",
          "profile_image_url",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "id_str": {
            "description": "ID",
            "searchable": true,
            "title": "Id",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Full Name",
            "searchable": true,
            "title": "Full Name",
            "type": "string",
            "viewable": true,
          },
          "profile_image_url": {
            "description": "Profile Image URL",
            "searchable": true,
            "title": "Profile Image URL",
            "type": "string",
            "viewable": true,
          },
          "screen_name": {
            "description": "User Id",
            "searchable": true,
            "title": "User Id",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Twitter",
        "type": "object",
        "viewable": true,
      },
      "tokenEndpoint": "https://api.twitter.com/oauth/access_token",
      "uiConfig": {
        "buttonClass": "fa-twitter",
        "buttonCustomStyle": "background-color: #00b6e9; border-color: #00b6e9; color: #fff;",
        "buttonCustomStyleHover": "background-color: #01abda; border-color: #01abda; color: #fff;",
        "buttonDisplayName": "Twitter",
        "buttonImage": "",
        "iconBackground": "#00b6e9",
        "iconClass": "fa-twitter",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.twitter.com/1.1/account/verify_credentials.json",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/internal.json 1`] = `
{
  "_id": "internal",
  "objects": [
    {
      "name": "role",
      "properties": {
        "authzMembers": {
          "items": {
            "resourceCollection": [
              {
                "conditionalAssociation": true,
                "label": "User",
                "notify": true,
                "path": "managed/alpha_user",
                "query": {
                  "fields": [
                    "userName",
                    "givenName",
                    "sn",
                  ],
                  "queryFilter": "true",
                },
              },
            ],
          },
        },
      },
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/jsonstore.json 1`] = `
{
  "_id": "jsonstore",
  "cleanupDwellSeconds": 600,
  "entryExpireSeconds": 1800,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/managed.json 1`] = `
{
  "_id": "managed",
  "objects": [
    {
      "meta": {
        "property": "_meta",
        "resourceCollection": "managed/alpha_usermeta",
        "trackedProperties": [
          "createDate",
          "lastChanged",
        ],
      },
      "name": "alpha_user",
      "notifications": {},
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": null,
        "icon": "fa-user",
        "order": [
          "_id",
          "userName",
          "password",
          "givenName",
          "cn",
          "sn",
          "mail",
          "profileImage",
          "description",
          "accountStatus",
          "telephoneNumber",
          "postalAddress",
          "city",
          "postalCode",
          "country",
          "stateProvince",
          "roles",
          "manager",
          "authzRoles",
          "reports",
          "effectiveRoles",
          "effectiveAssignments",
          "lastSync",
          "kbaInfo",
          "preferences",
          "consentedMappings",
          "ownerOfOrg",
          "adminOfOrg",
          "memberOfOrg",
          "memberOfOrgIDs",
          "frIndexedString1",
          "frIndexedString2",
          "frIndexedString3",
          "frIndexedString4",
          "frIndexedString5",
          "frUnindexedString1",
          "frUnindexedString2",
          "frUnindexedString3",
          "frUnindexedString4",
          "frUnindexedString5",
          "frIndexedMultivalued1",
          "frIndexedMultivalued2",
          "frIndexedMultivalued3",
          "frIndexedMultivalued4",
          "frIndexedMultivalued5",
          "frUnindexedMultivalued1",
          "frUnindexedMultivalued2",
          "frUnindexedMultivalued3",
          "frUnindexedMultivalued4",
          "frUnindexedMultivalued5",
          "frIndexedDate1",
          "frIndexedDate2",
          "frIndexedDate3",
          "frIndexedDate4",
          "frIndexedDate5",
          "frUnindexedDate1",
          "frUnindexedDate2",
          "frUnindexedDate3",
          "frUnindexedDate4",
          "frUnindexedDate5",
          "frIndexedInteger1",
          "frIndexedInteger2",
          "frIndexedInteger3",
          "frIndexedInteger4",
          "frIndexedInteger5",
          "frUnindexedInteger1",
          "frUnindexedInteger2",
          "frUnindexedInteger3",
          "frUnindexedInteger4",
          "frUnindexedInteger5",
          "assignedDashboard",
          "aliasList",
          "custom_department",
          "groups",
          "effectiveGroups",
        ],
        "properties": {
          "_id": {
            "description": "User ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": null,
            "userEditable": false,
            "viewable": false,
          },
          "accountStatus": {
            "default": "active",
            "description": "Status",
            "isPersonal": false,
            "searchable": true,
            "title": "Status",
            "type": "string",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "adminOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "admins",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Administer",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "aliasList": {
            "description": "List of identity aliases used primarily to record social IdP subjects for this user",
            "isVirtual": false,
            "items": {
              "title": "User Alias Names Items",
              "type": "string",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "User Alias Names List",
            "type": "array",
            "userEditable": true,
            "viewable": false,
          },
          "assignedDashboard": {
            "description": "List of items to click on for this user",
            "isVirtual": false,
            "items": {
              "title": "Assigned Dashboard Items",
              "type": "string",
            },
            "searchable": false,
            "title": "Assigned Dashboard",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "authzRoles": {
            "description": "Authorization Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Authorization Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Internal Role",
                  "path": "internal/role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "authzMembers",
              "reverseRelationship": true,
              "title": "Authorization Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Authorization Roles",
            "type": "array",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "city": {
            "description": "City",
            "isPersonal": false,
            "title": "City",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "cn": {
            "description": "Common Name",
            "isPersonal": true,
            "isVirtual": true,
            "onStore": {
              "source": "object.cn || (object.givenName + ' ' + object.sn)",
              "type": "text/javascript",
            },
            "scope": "private",
            "searchable": false,
            "title": "Common Name",
            "type": "string",
            "userEditable": false,
            "viewable": false,
          },
          "consentedMappings": {
            "description": "Consented Mappings",
            "isPersonal": false,
            "isVirtual": false,
            "items": {
              "items": {
                "order": [
                  "mapping",
                  "consentDate",
                ],
                "properties": {
                  "consentDate": {
                    "description": "Consent Date",
                    "searchable": true,
                    "title": "Consent Date",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                  "mapping": {
                    "description": "Mapping",
                    "searchable": true,
                    "title": "Mapping",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                },
                "required": [
                  "mapping",
                  "consentDate",
                ],
                "title": "Consented Mappings Item",
                "type": "object",
              },
              "title": "Consented Mappings Items",
              "type": "array",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Consented Mappings",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "country": {
            "description": "Country",
            "isPersonal": false,
            "title": "Country",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "custom_department": {
            "description": null,
            "format": null,
            "isVirtual": false,
            "searchable": false,
            "title": "Department",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "description": {
            "description": "Description",
            "isPersonal": false,
            "searchable": true,
            "title": "Description",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "effectiveAssignments": {
            "description": "Effective Assignments",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Assignments Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedObjectFields": [
                "*",
              ],
              "referencedRelationshipFields": [
                "roles",
                "assignments",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Assignments",
            "type": "array",
            "usageDescription": null,
            "viewable": false,
          },
          "effectiveGroups": {
            "description": "Effective Groups",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Groups Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "groups",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Groups",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "effectiveRoles": {
            "description": "Effective Roles",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Roles Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "roles",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Roles",
            "type": "array",
            "usageDescription": null,
            "viewable": false,
          },
          "frIndexedDate1": {
            "description": "Generic Indexed Date 1",
            "isPersonal": false,
            "title": "Generic Indexed Date 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate2": {
            "description": "Generic Indexed Date 2",
            "isPersonal": false,
            "title": "Generic Indexed Date 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate3": {
            "description": "Generic Indexed Date 3",
            "isPersonal": false,
            "title": "Generic Indexed Date 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate4": {
            "description": "Generic Indexed Date 4",
            "isPersonal": false,
            "title": "Generic Indexed Date 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate5": {
            "description": "Generic Indexed Date 5",
            "isPersonal": false,
            "title": "Generic Indexed Date 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger1": {
            "description": "Generic Indexed Integer 1",
            "isPersonal": false,
            "title": "Generic Indexed Integer 1",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger2": {
            "description": "Generic Indexed Integer 2",
            "isPersonal": false,
            "title": "Generic Indexed Integer 2",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger3": {
            "description": "Generic Indexed Integer 3",
            "isPersonal": false,
            "title": "Generic Indexed Integer 3",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger4": {
            "description": "Generic Indexed Integer 4",
            "isPersonal": false,
            "title": "Generic Indexed Integer 4",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger5": {
            "description": "Generic Indexed Integer 5",
            "isPersonal": false,
            "title": "Generic Indexed Integer 5",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued1": {
            "description": "Generic Indexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 1",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued2": {
            "description": "Generic Indexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 2",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued3": {
            "description": "Generic Indexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 3",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued4": {
            "description": "Generic Indexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 4",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued5": {
            "description": "Generic Indexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 5",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString1": {
            "description": "Generic Indexed String 1",
            "isPersonal": false,
            "title": "Generic Indexed String 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString2": {
            "description": "Generic Indexed String 2",
            "isPersonal": false,
            "title": "Generic Indexed String 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString3": {
            "description": "Generic Indexed String 3",
            "isPersonal": false,
            "title": "Generic Indexed String 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString4": {
            "description": "Generic Indexed String 4",
            "isPersonal": false,
            "title": "Generic Indexed String 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString5": {
            "description": "Generic Indexed String 5",
            "isPersonal": false,
            "title": "Generic Indexed String 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate1": {
            "description": "Generic Unindexed Date 1",
            "isPersonal": false,
            "title": "Generic Unindexed Date 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate2": {
            "description": "Generic Unindexed Date 2",
            "isPersonal": false,
            "title": "Generic Unindexed Date 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate3": {
            "description": "Generic Unindexed Date 3",
            "isPersonal": false,
            "title": "Generic Unindexed Date 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate4": {
            "description": "Generic Unindexed Date 4",
            "isPersonal": false,
            "title": "Generic Unindexed Date 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate5": {
            "description": "Generic Unindexed Date 5",
            "isPersonal": false,
            "title": "Generic Unindexed Date 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger1": {
            "description": "Generic Unindexed Integer 1",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 1",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger2": {
            "description": "Generic Unindexed Integer 2",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 2",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger3": {
            "description": "Generic Unindexed Integer 3",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 3",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger4": {
            "description": "Generic Unindexed Integer 4",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 4",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger5": {
            "description": "Generic Unindexed Integer 5",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 5",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued1": {
            "description": "Generic Unindexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 1",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued2": {
            "description": "Generic Unindexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 2",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued3": {
            "description": "Generic Unindexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 3",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued4": {
            "description": "Generic Unindexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 4",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued5": {
            "description": "Generic Unindexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 5",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString1": {
            "description": "Username",
            "format": null,
            "isPersonal": false,
            "isVirtual": false,
            "searchable": false,
            "title": "Username",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString2": {
            "description": "Generic Unindexed String 2",
            "isPersonal": false,
            "title": "Generic Unindexed String 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString3": {
            "description": "Generic Unindexed String 3",
            "isPersonal": false,
            "title": "Generic Unindexed String 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString4": {
            "description": "Generic Unindexed String 4",
            "isPersonal": false,
            "title": "Generic Unindexed String 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString5": {
            "description": "Generic Unindexed String 5",
            "isPersonal": false,
            "title": "Generic Unindexed String 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "givenName": {
            "description": "First Name",
            "isPersonal": true,
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "groups": {
            "description": "Groups",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Groups Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Group",
                  "path": "managed/alpha_group",
                  "query": {
                    "fields": [],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Groups Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": false,
            "returnByDefault": false,
            "title": "Groups",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "kbaInfo": {
            "description": "KBA Info",
            "isPersonal": true,
            "items": {
              "order": [
                "answer",
                "customQuestion",
                "questionId",
              ],
              "properties": {
                "answer": {
                  "description": "Answer",
                  "type": "string",
                },
                "customQuestion": {
                  "description": "Custom question",
                  "type": "string",
                },
                "questionId": {
                  "description": "Question ID",
                  "type": "string",
                },
              },
              "required": [],
              "title": "KBA Info Items",
              "type": "object",
            },
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "lastSync": {
            "description": "Last Sync timestamp",
            "isPersonal": false,
            "order": [
              "effectiveAssignments",
              "timestamp",
            ],
            "properties": {
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "title": "Effective Assignments",
                "type": "array",
              },
              "timestamp": {
                "description": "Timestamp",
                "type": "string",
              },
            },
            "scope": "private",
            "searchable": false,
            "title": "Last Sync timestamp",
            "type": "object",
            "usageDescription": null,
            "viewable": false,
          },
          "mail": {
            "description": "Email Address",
            "isPersonal": true,
            "policies": [
              {
                "policyId": "valid-email-address-format",
              },
            ],
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "manager": {
            "description": "Manager",
            "isPersonal": false,
            "properties": {
              "_ref": {
                "description": "References a relationship from a managed object",
                "type": "string",
              },
              "_refProperties": {
                "description": "Supports metadata within the relationship",
                "properties": {
                  "_id": {
                    "description": "_refProperties object ID",
                    "type": "string",
                  },
                },
                "title": "Manager _refProperties",
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "User",
                "path": "managed/alpha_user",
                "query": {
                  "fields": [
                    "userName",
                    "givenName",
                    "sn",
                  ],
                  "queryFilter": "true",
                },
              },
            ],
            "reversePropertyName": "reports",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Manager",
            "type": "relationship",
            "usageDescription": null,
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "memberOfOrg": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": false,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations to which I Belong",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "memberOfOrgIDs": {
            "isVirtual": true,
            "items": {
              "title": "org identifiers",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "memberOfOrg",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "MemberOfOrgIDs",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "ownerOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "owners",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Own",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "password": {
            "description": "Password",
            "isPersonal": false,
            "isProtected": true,
            "scope": "private",
            "searchable": false,
            "title": "Password",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "postalAddress": {
            "description": "Address 1",
            "isPersonal": true,
            "title": "Address 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "postalCode": {
            "description": "Postal Code",
            "isPersonal": false,
            "title": "Postal Code",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "preferences": {
            "description": "Preferences",
            "isPersonal": false,
            "order": [
              "updates",
              "marketing",
            ],
            "properties": {
              "marketing": {
                "description": "Send me special offers and services",
                "type": "boolean",
              },
              "updates": {
                "description": "Send me news and updates",
                "type": "boolean",
              },
            },
            "searchable": false,
            "title": "Preferences",
            "type": "object",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "profileImage": {
            "description": "Profile Image",
            "isPersonal": true,
            "searchable": true,
            "title": "Profile Image",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "reports": {
            "description": "Direct Reports",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Direct Reports Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "manager",
              "reverseRelationship": true,
              "title": "Direct Reports Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Direct Reports",
            "type": "array",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "roles": {
            "description": "Provisioning Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Provisioning Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Role",
                  "path": "managed/alpha_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Provisioning Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Provisioning Roles",
            "type": "array",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "sn": {
            "description": "Last Name",
            "isPersonal": true,
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "stateProvince": {
            "description": "State/Province",
            "isPersonal": false,
            "title": "State/Province",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "telephoneNumber": {
            "description": "Telephone Number",
            "isPersonal": true,
            "pattern": "^\\+?([0-9\\- \\(\\)])*$",
            "title": "Telephone Number",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "userName": {
            "description": "Username",
            "isPersonal": true,
            "minLength": 1,
            "policies": [
              {
                "policyId": "valid-username",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
              {
                "params": {
                  "minLength": 1,
                },
                "policyId": "minimum-length",
              },
              {
                "params": {
                  "maxLength": 255,
                },
                "policyId": "maximum-length",
              },
            ],
            "searchable": true,
            "title": "Username",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
        },
        "required": [
          "userName",
          "givenName",
          "sn",
          "mail",
        ],
        "title": "Alpha realm - User",
        "type": "object",
      },
    },
    {
      "meta": {
        "property": "_meta",
        "resourceCollection": "managed/bravo_usermeta",
        "trackedProperties": [
          "createDate",
          "lastChanged",
        ],
      },
      "name": "bravo_user",
      "notifications": {},
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "icon": "fa-user",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
        "mat-icon": "people",
        "order": [
          "_id",
          "userName",
          "password",
          "givenName",
          "cn",
          "sn",
          "mail",
          "profileImage",
          "description",
          "accountStatus",
          "telephoneNumber",
          "postalAddress",
          "city",
          "postalCode",
          "country",
          "stateProvince",
          "roles",
          "manager",
          "authzRoles",
          "reports",
          "effectiveRoles",
          "effectiveAssignments",
          "lastSync",
          "kbaInfo",
          "preferences",
          "consentedMappings",
          "ownerOfOrg",
          "adminOfOrg",
          "memberOfOrg",
          "memberOfOrgIDs",
          "frIndexedString1",
          "frIndexedString2",
          "frIndexedString3",
          "frIndexedString4",
          "frIndexedString5",
          "frUnindexedString1",
          "frUnindexedString2",
          "frUnindexedString3",
          "frUnindexedString4",
          "frUnindexedString5",
          "frIndexedMultivalued1",
          "frIndexedMultivalued2",
          "frIndexedMultivalued3",
          "frIndexedMultivalued4",
          "frIndexedMultivalued5",
          "frUnindexedMultivalued1",
          "frUnindexedMultivalued2",
          "frUnindexedMultivalued3",
          "frUnindexedMultivalued4",
          "frUnindexedMultivalued5",
          "frIndexedDate1",
          "frIndexedDate2",
          "frIndexedDate3",
          "frIndexedDate4",
          "frIndexedDate5",
          "frUnindexedDate1",
          "frUnindexedDate2",
          "frUnindexedDate3",
          "frUnindexedDate4",
          "frUnindexedDate5",
          "frIndexedInteger1",
          "frIndexedInteger2",
          "frIndexedInteger3",
          "frIndexedInteger4",
          "frIndexedInteger5",
          "frUnindexedInteger1",
          "frUnindexedInteger2",
          "frUnindexedInteger3",
          "frUnindexedInteger4",
          "frUnindexedInteger5",
          "assignedDashboard",
          "groups",
          "effectiveGroups",
        ],
        "properties": {
          "_id": {
            "description": "User ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": false,
          },
          "accountStatus": {
            "default": "active",
            "description": "Status",
            "isPersonal": false,
            "searchable": true,
            "title": "Status",
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "adminOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "admins",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Administer",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "aliasList": {
            "description": "List of identity aliases used primarily to record social IdP subjects for this user",
            "isVirtual": false,
            "items": {
              "title": "User Alias Names Items",
              "type": "string",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "User Alias Names List",
            "type": "array",
            "userEditable": true,
            "viewable": false,
          },
          "assignedDashboard": {
            "description": "List of items to click on for this user",
            "isVirtual": false,
            "items": {
              "title": "Assigned Dashboard Items",
              "type": "string",
            },
            "searchable": false,
            "title": "Assigned Dashboard",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "authzRoles": {
            "description": "Authorization Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Authorization Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Internal Role",
                  "path": "internal/role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "authzMembers",
              "reverseRelationship": true,
              "title": "Authorization Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Authorization Roles",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "city": {
            "description": "City",
            "isPersonal": false,
            "title": "City",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "cn": {
            "description": "Common Name",
            "isPersonal": true,
            "isVirtual": true,
            "onStore": {
              "source": "object.cn || (object.givenName + ' ' + object.sn)",
              "type": "text/javascript",
            },
            "scope": "private",
            "searchable": false,
            "title": "Common Name",
            "type": "string",
            "userEditable": false,
            "viewable": false,
          },
          "consentedMappings": {
            "description": "Consented Mappings",
            "isPersonal": false,
            "isVirtual": false,
            "items": {
              "items": {
                "order": [
                  "mapping",
                  "consentDate",
                ],
                "properties": {
                  "consentDate": {
                    "description": "Consent Date",
                    "searchable": true,
                    "title": "Consent Date",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                  "mapping": {
                    "description": "Mapping",
                    "searchable": true,
                    "title": "Mapping",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                },
                "required": [
                  "mapping",
                  "consentDate",
                ],
                "title": "Consented Mappings Item",
                "type": "object",
              },
              "title": "Consented Mappings Items",
              "type": "array",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Consented Mappings",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "country": {
            "description": "Country",
            "isPersonal": false,
            "title": "Country",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "description": {
            "description": "Description",
            "isPersonal": false,
            "searchable": true,
            "title": "Description",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "effectiveAssignments": {
            "description": "Effective Assignments",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Assignments Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedObjectFields": [
                "*",
              ],
              "referencedRelationshipFields": [
                "roles",
                "assignments",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Assignments",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "effectiveGroups": {
            "description": "Effective Groups",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Groups Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "groups",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Groups",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "effectiveRoles": {
            "description": "Effective Roles",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Roles Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "roles",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Roles",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "frIndexedDate1": {
            "description": "Generic Indexed Date 1",
            "isPersonal": false,
            "title": "Generic Indexed Date 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate2": {
            "description": "Generic Indexed Date 2",
            "isPersonal": false,
            "title": "Generic Indexed Date 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate3": {
            "description": "Generic Indexed Date 3",
            "isPersonal": false,
            "title": "Generic Indexed Date 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate4": {
            "description": "Generic Indexed Date 4",
            "isPersonal": false,
            "title": "Generic Indexed Date 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate5": {
            "description": "Generic Indexed Date 5",
            "isPersonal": false,
            "title": "Generic Indexed Date 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger1": {
            "description": "Generic Indexed Integer 1",
            "isPersonal": false,
            "title": "Generic Indexed Integer 1",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger2": {
            "description": "Generic Indexed Integer 2",
            "isPersonal": false,
            "title": "Generic Indexed Integer 2",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger3": {
            "description": "Generic Indexed Integer 3",
            "isPersonal": false,
            "title": "Generic Indexed Integer 3",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger4": {
            "description": "Generic Indexed Integer 4",
            "isPersonal": false,
            "title": "Generic Indexed Integer 4",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger5": {
            "description": "Generic Indexed Integer 5",
            "isPersonal": false,
            "title": "Generic Indexed Integer 5",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued1": {
            "description": "Generic Indexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 1",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued2": {
            "description": "Generic Indexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 2",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued3": {
            "description": "Generic Indexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 3",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued4": {
            "description": "Generic Indexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 4",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued5": {
            "description": "Generic Indexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 5",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString1": {
            "description": "Generic Indexed String 1",
            "isPersonal": false,
            "title": "Generic Indexed String 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString2": {
            "description": "Generic Indexed String 2",
            "isPersonal": false,
            "title": "Generic Indexed String 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString3": {
            "description": "Generic Indexed String 3",
            "isPersonal": false,
            "title": "Generic Indexed String 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString4": {
            "description": "Generic Indexed String 4",
            "isPersonal": false,
            "title": "Generic Indexed String 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString5": {
            "description": "Generic Indexed String 5",
            "isPersonal": false,
            "title": "Generic Indexed String 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate1": {
            "description": "Generic Unindexed Date 1",
            "isPersonal": false,
            "title": "Generic Unindexed Date 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate2": {
            "description": "Generic Unindexed Date 2",
            "isPersonal": false,
            "title": "Generic Unindexed Date 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate3": {
            "description": "Generic Unindexed Date 3",
            "isPersonal": false,
            "title": "Generic Unindexed Date 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate4": {
            "description": "Generic Unindexed Date 4",
            "isPersonal": false,
            "title": "Generic Unindexed Date 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate5": {
            "description": "Generic Unindexed Date 5",
            "isPersonal": false,
            "title": "Generic Unindexed Date 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger1": {
            "description": "Generic Unindexed Integer 1",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 1",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger2": {
            "description": "Generic Unindexed Integer 2",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 2",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger3": {
            "description": "Generic Unindexed Integer 3",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 3",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger4": {
            "description": "Generic Unindexed Integer 4",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 4",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger5": {
            "description": "Generic Unindexed Integer 5",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 5",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued1": {
            "description": "Generic Unindexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 1",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued2": {
            "description": "Generic Unindexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 2",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued3": {
            "description": "Generic Unindexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 3",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued4": {
            "description": "Generic Unindexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 4",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued5": {
            "description": "Generic Unindexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 5",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString1": {
            "description": "Generic Unindexed String 1",
            "isPersonal": false,
            "title": "Generic Unindexed String 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString2": {
            "description": "Generic Unindexed String 2",
            "isPersonal": false,
            "title": "Generic Unindexed String 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString3": {
            "description": "Generic Unindexed String 3",
            "isPersonal": false,
            "title": "Generic Unindexed String 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString4": {
            "description": "Generic Unindexed String 4",
            "isPersonal": false,
            "title": "Generic Unindexed String 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString5": {
            "description": "Generic Unindexed String 5",
            "isPersonal": false,
            "title": "Generic Unindexed String 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "givenName": {
            "description": "First Name",
            "isPersonal": true,
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "groups": {
            "description": "Groups",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Groups Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Group",
                  "path": "managed/bravo_group",
                  "query": {
                    "fields": [],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Groups Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": false,
            "returnByDefault": false,
            "title": "Groups",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "kbaInfo": {
            "description": "KBA Info",
            "isPersonal": true,
            "items": {
              "order": [
                "answer",
                "customQuestion",
                "questionId",
              ],
              "properties": {
                "answer": {
                  "description": "Answer",
                  "type": "string",
                },
                "customQuestion": {
                  "description": "Custom question",
                  "type": "string",
                },
                "questionId": {
                  "description": "Question ID",
                  "type": "string",
                },
              },
              "required": [],
              "title": "KBA Info Items",
              "type": "object",
            },
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "lastSync": {
            "description": "Last Sync timestamp",
            "isPersonal": false,
            "order": [
              "effectiveAssignments",
              "timestamp",
            ],
            "properties": {
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "title": "Effective Assignments",
                "type": "array",
              },
              "timestamp": {
                "description": "Timestamp",
                "type": "string",
              },
            },
            "required": [],
            "scope": "private",
            "searchable": false,
            "title": "Last Sync timestamp",
            "type": "object",
            "usageDescription": "",
            "viewable": false,
          },
          "mail": {
            "description": "Email Address",
            "isPersonal": true,
            "policies": [
              {
                "policyId": "valid-email-address-format",
              },
            ],
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "manager": {
            "description": "Manager",
            "isPersonal": false,
            "properties": {
              "_ref": {
                "description": "References a relationship from a managed object",
                "type": "string",
              },
              "_refProperties": {
                "description": "Supports metadata within the relationship",
                "properties": {
                  "_id": {
                    "description": "_refProperties object ID",
                    "type": "string",
                  },
                },
                "title": "Manager _refProperties",
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "User",
                "path": "managed/bravo_user",
                "query": {
                  "fields": [
                    "userName",
                    "givenName",
                    "sn",
                  ],
                  "queryFilter": "true",
                },
              },
            ],
            "reversePropertyName": "reports",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Manager",
            "type": "relationship",
            "usageDescription": "",
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "memberOfOrg": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": false,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations to which I Belong",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "memberOfOrgIDs": {
            "isVirtual": true,
            "items": {
              "title": "org identifiers",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "memberOfOrg",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "MemberOfOrgIDs",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "ownerOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "owners",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Own",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "password": {
            "description": "Password",
            "isPersonal": false,
            "isProtected": true,
            "scope": "private",
            "searchable": false,
            "title": "Password",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "postalAddress": {
            "description": "Address 1",
            "isPersonal": true,
            "title": "Address 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "postalCode": {
            "description": "Postal Code",
            "isPersonal": false,
            "title": "Postal Code",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "preferences": {
            "description": "Preferences",
            "isPersonal": false,
            "order": [
              "updates",
              "marketing",
            ],
            "properties": {
              "marketing": {
                "description": "Send me special offers and services",
                "type": "boolean",
              },
              "updates": {
                "description": "Send me news and updates",
                "type": "boolean",
              },
            },
            "required": [],
            "searchable": false,
            "title": "Preferences",
            "type": "object",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "profileImage": {
            "description": "Profile Image",
            "isPersonal": true,
            "searchable": true,
            "title": "Profile Image",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "reports": {
            "description": "Direct Reports",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Direct Reports Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "manager",
              "reverseRelationship": true,
              "title": "Direct Reports Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Direct Reports",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "roles": {
            "description": "Provisioning Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Provisioning Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Role",
                  "path": "managed/bravo_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Provisioning Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Provisioning Roles",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "sn": {
            "description": "Last Name",
            "isPersonal": true,
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "stateProvince": {
            "description": "State/Province",
            "isPersonal": false,
            "title": "State/Province",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "telephoneNumber": {
            "description": "Telephone Number",
            "isPersonal": true,
            "pattern": "^\\+?([0-9\\- \\(\\)])*$",
            "title": "Telephone Number",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "userName": {
            "description": "Username",
            "isPersonal": true,
            "minLength": 1,
            "policies": [
              {
                "policyId": "valid-username",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
              {
                "params": {
                  "minLength": 1,
                },
                "policyId": "minimum-length",
              },
              {
                "params": {
                  "maxLength": 255,
                },
                "policyId": "maximum-length",
              },
            ],
            "searchable": true,
            "title": "Username",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
        },
        "required": [
          "userName",
          "givenName",
          "sn",
          "mail",
        ],
        "title": "Bravo realm - User",
        "type": "object",
        "viewable": true,
      },
    },
    {
      "name": "alpha_role",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "",
        "icon": "fa-check-square-o",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
        "mat-icon": "assignment_ind",
        "order": [
          "_id",
          "name",
          "description",
          "members",
          "assignments",
          "condition",
          "temporalConstraints",
        ],
        "properties": {
          "_id": {
            "description": "Role ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "assignments": {
            "description": "Managed Assignments",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Assignments Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Assignment",
                  "path": "managed/alpha_assignment",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Managed Assignments Items",
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": false,
            "title": "Managed Assignments",
            "type": "array",
            "viewable": true,
          },
          "condition": {
            "description": "A conditional filter for this role",
            "isConditional": true,
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "The role description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "members": {
            "description": "Role Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Role Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Role Members Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Role Members",
            "type": "array",
            "viewable": true,
          },
          "name": {
            "description": "The role name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "temporalConstraints": {
            "description": "An array of temporal constraints for a role",
            "isTemporalConstraint": true,
            "items": {
              "order": [
                "duration",
              ],
              "properties": {
                "duration": {
                  "description": "Duration",
                  "type": "string",
                },
              },
              "required": [
                "duration",
              ],
              "title": "Temporal Constraints Items",
              "type": "object",
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": true,
            "title": "Temporal Constraints",
            "type": "array",
            "viewable": false,
          },
        },
        "required": [
          "name",
        ],
        "title": "Alpha realm - Role",
        "type": "object",
      },
    },
    {
      "name": "bravo_role",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "",
        "icon": "fa-check-square-o",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
        "mat-icon": "assignment_ind",
        "order": [
          "_id",
          "name",
          "description",
          "members",
          "assignments",
          "condition",
          "temporalConstraints",
        ],
        "properties": {
          "_id": {
            "description": "Role ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "assignments": {
            "description": "Managed Assignments",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Assignments Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Assignment",
                  "path": "managed/bravo_assignment",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Managed Assignments Items",
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": false,
            "title": "Managed Assignments",
            "type": "array",
            "viewable": true,
          },
          "condition": {
            "description": "A conditional filter for this role",
            "isConditional": true,
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "The role description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "members": {
            "description": "Role Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Role Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Role Members Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Role Members",
            "type": "array",
            "viewable": true,
          },
          "name": {
            "description": "The role name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "temporalConstraints": {
            "description": "An array of temporal constraints for a role",
            "isTemporalConstraint": true,
            "items": {
              "order": [
                "duration",
              ],
              "properties": {
                "duration": {
                  "description": "Duration",
                  "type": "string",
                },
              },
              "required": [
                "duration",
              ],
              "title": "Temporal Constraints Items",
              "type": "object",
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": true,
            "title": "Temporal Constraints",
            "type": "array",
            "viewable": false,
          },
        },
        "required": [
          "name",
        ],
        "title": "Bravo realm - Role",
        "type": "object",
      },
    },
    {
      "name": "alpha_assignment",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "A role assignment",
        "icon": "fa-key",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
        "mat-icon": "vpn_key",
        "order": [
          "_id",
          "name",
          "description",
          "mapping",
          "attributes",
          "linkQualifiers",
          "roles",
        ],
        "properties": {
          "_id": {
            "description": "The assignment ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "attributes": {
            "description": "The attributes operated on by this assignment.",
            "items": {
              "order": [
                "assignmentOperation",
                "unassignmentOperation",
                "name",
                "value",
              ],
              "properties": {
                "assignmentOperation": {
                  "description": "Assignment operation",
                  "type": "string",
                },
                "name": {
                  "description": "Name",
                  "type": "string",
                },
                "unassignmentOperation": {
                  "description": "Unassignment operation",
                  "type": "string",
                },
                "value": {
                  "description": "Value",
                  "type": "string",
                },
              },
              "required": [],
              "title": "Assignment Attributes Items",
              "type": "object",
            },
            "notifyRelationships": [
              "roles",
            ],
            "title": "Assignment Attributes",
            "type": "array",
            "viewable": true,
          },
          "description": {
            "description": "The assignment description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "linkQualifiers": {
            "description": "Conditional link qualifiers to restrict this assignment to.",
            "items": {
              "title": "Link Qualifiers Items",
              "type": "string",
            },
            "title": "Link Qualifiers",
            "type": "array",
            "viewable": true,
          },
          "mapping": {
            "description": "The name of the mapping this assignment applies to",
            "policies": [
              {
                "policyId": "mapping-exists",
              },
            ],
            "searchable": true,
            "title": "Mapping",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "The assignment name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "roles": {
            "description": "Managed Roles",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Role",
                  "notify": true,
                  "path": "managed/alpha_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "assignments",
              "reverseRelationship": true,
              "title": "Managed Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Managed Roles",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
        },
        "required": [
          "name",
          "description",
          "mapping",
        ],
        "title": "Alpha realm - Assignment",
        "type": "object",
      },
    },
    {
      "name": "bravo_assignment",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "A role assignment",
        "icon": "fa-key",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
        "mat-icon": "vpn_key",
        "order": [
          "_id",
          "name",
          "description",
          "mapping",
          "attributes",
          "linkQualifiers",
          "roles",
        ],
        "properties": {
          "_id": {
            "description": "The assignment ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "attributes": {
            "description": "The attributes operated on by this assignment.",
            "items": {
              "order": [
                "assignmentOperation",
                "unassignmentOperation",
                "name",
                "value",
              ],
              "properties": {
                "assignmentOperation": {
                  "description": "Assignment operation",
                  "type": "string",
                },
                "name": {
                  "description": "Name",
                  "type": "string",
                },
                "unassignmentOperation": {
                  "description": "Unassignment operation",
                  "type": "string",
                },
                "value": {
                  "description": "Value",
                  "type": "string",
                },
              },
              "required": [],
              "title": "Assignment Attributes Items",
              "type": "object",
            },
            "notifyRelationships": [
              "roles",
            ],
            "title": "Assignment Attributes",
            "type": "array",
            "viewable": true,
          },
          "description": {
            "description": "The assignment description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "linkQualifiers": {
            "description": "Conditional link qualifiers to restrict this assignment to.",
            "items": {
              "title": "Link Qualifiers Items",
              "type": "string",
            },
            "title": "Link Qualifiers",
            "type": "array",
            "viewable": true,
          },
          "mapping": {
            "description": "The name of the mapping this assignment applies to",
            "policies": [
              {
                "policyId": "mapping-exists",
              },
            ],
            "searchable": true,
            "title": "Mapping",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "The assignment name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "roles": {
            "description": "Managed Roles",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Role",
                  "notify": true,
                  "path": "managed/bravo_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "assignments",
              "reverseRelationship": true,
              "title": "Managed Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Managed Roles",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
        },
        "required": [
          "name",
          "description",
          "mapping",
        ],
        "title": "Bravo realm - Assignment",
        "type": "object",
      },
    },
    {
      "name": "alpha_organization",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "An organization or tenant, whose resources are managed by organizational admins.",
        "icon": "fa-building",
        "order": [
          "name",
          "description",
          "owners",
          "admins",
          "members",
          "parent",
          "children",
          "adminIDs",
          "ownerIDs",
          "parentAdminIDs",
          "parentOwnerIDs",
          "parentIDs",
          "test",
        ],
        "properties": {
          "adminIDs": {
            "isVirtual": true,
            "items": {
              "title": "admin ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "admins",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Admin user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "admins": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "adminOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Administrators",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "children": {
            "description": "Child Organizations",
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                      "description",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "parent",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Child Organizations",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "description": {
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "members": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": true,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "memberOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "searchable": true,
            "title": "Name",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "ownerIDs": {
            "isVirtual": true,
            "items": {
              "title": "owner ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "owners",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Owner user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "owners": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "ownerOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Owner",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "parent": {
            "description": "Parent Organization",
            "notifyRelationships": [
              "children",
              "members",
            ],
            "notifySelf": true,
            "properties": {
              "_ref": {
                "type": "string",
              },
              "_refProperties": {
                "properties": {
                  "_id": {
                    "propName": "_id",
                    "required": false,
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "Organization",
                "notify": false,
                "path": "managed/alpha_organization",
                "query": {
                  "fields": [
                    "name",
                    "description",
                  ],
                  "queryFilter": "true",
                  "sortKeys": [],
                },
              },
            ],
            "returnByDefault": false,
            "reversePropertyName": "children",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Parent Organization",
            "type": "relationship",
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "parentAdminIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent admins",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "adminIDs",
                "parentAdminIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent admins",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentIDs": {
            "isVirtual": true,
            "items": {
              "title": "parent org ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "parent org ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentOwnerIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent owners",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "ownerIDs",
                "parentOwnerIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent owners",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "test": {
            "searchable": true,
            "title": "test",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
        },
        "required": [
          "name",
        ],
        "title": "Alpha realm - Organization",
        "type": "object",
      },
    },
    {
      "name": "bravo_organization",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "An organization or tenant, whose resources are managed by organizational admins.",
        "icon": "fa-building",
        "order": [
          "name",
          "description",
          "owners",
          "admins",
          "members",
          "parent",
          "children",
          "adminIDs",
          "ownerIDs",
          "parentAdminIDs",
          "parentOwnerIDs",
          "parentIDs",
        ],
        "properties": {
          "adminIDs": {
            "isVirtual": true,
            "items": {
              "title": "admin ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "admins",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Admin user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "admins": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "adminOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Administrators",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "children": {
            "description": "Child Organizations",
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                      "description",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "parent",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Child Organizations",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "description": {
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "members": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": true,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "memberOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "searchable": true,
            "title": "Name",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "ownerIDs": {
            "isVirtual": true,
            "items": {
              "title": "owner ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "owners",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Owner user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "owners": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "ownerOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Owner",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "parent": {
            "description": "Parent Organization",
            "notifyRelationships": [
              "children",
              "members",
            ],
            "notifySelf": true,
            "properties": {
              "_ref": {
                "type": "string",
              },
              "_refProperties": {
                "properties": {
                  "_id": {
                    "propName": "_id",
                    "required": false,
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "Organization",
                "notify": false,
                "path": "managed/bravo_organization",
                "query": {
                  "fields": [
                    "name",
                    "description",
                  ],
                  "queryFilter": "true",
                  "sortKeys": [],
                },
              },
            ],
            "returnByDefault": false,
            "reversePropertyName": "children",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Parent Organization",
            "type": "relationship",
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "parentAdminIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent admins",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "adminIDs",
                "parentAdminIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent admins",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentIDs": {
            "isVirtual": true,
            "items": {
              "title": "parent org ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "parent org ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentOwnerIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent owners",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "ownerIDs",
                "parentOwnerIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent owners",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
        },
        "required": [
          "name",
        ],
        "title": "Bravo realm - Organization",
        "type": "object",
      },
    },
    {
      "name": "alpha_group",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "icon": "fa-group",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
        "mat-icon": "group",
        "order": [
          "_id",
          "name",
          "description",
          "condition",
          "members",
        ],
        "properties": {
          "_id": {
            "description": "Group ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "propertyName": "name",
                },
                "policyId": "id-must-equal-property",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": false,
          },
          "condition": {
            "description": "A filter for conditionally assigned members",
            "isConditional": true,
            "policies": [
              {
                "policyId": "valid-query-filter",
              },
            ],
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "Group Description",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": false,
            "viewable": true,
          },
          "members": {
            "description": "Group Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Group Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "groups",
              "reverseRelationship": true,
              "title": "Group Members Items",
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "description": "Group Name",
            "policies": [
              {
                "policyId": "required",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/*",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [
          "name",
        ],
        "title": "Alpha realm - Group",
        "viewable": true,
      },
    },
    {
      "name": "bravo_group",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "icon": "fa-group",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
        "mat-icon": "group",
        "order": [
          "_id",
          "name",
          "description",
          "condition",
          "members",
        ],
        "properties": {
          "_id": {
            "description": "Group ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "propertyName": "name",
                },
                "policyId": "id-must-equal-property",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": false,
          },
          "condition": {
            "description": "A filter for conditionally assigned members",
            "isConditional": true,
            "policies": [
              {
                "policyId": "valid-query-filter",
              },
            ],
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "Group Description",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": false,
            "viewable": true,
          },
          "members": {
            "description": "Group Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Group Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "groups",
              "reverseRelationship": true,
              "title": "Group Members Items",
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "description": "Group Name",
            "policies": [
              {
                "policyId": "required",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/*",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [
          "name",
        ],
        "title": "Bravo realm - Group",
        "viewable": true,
      },
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/metrics.json 1`] = `
{
  "_id": "metrics",
  "enabled": true,
  "prometheusRole": "&{openidm.prometheus.role}",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/notificationFactory.json 1`] = `
{
  "_id": "notificationFactory",
  "enabled": false,
  "threadPool": {
    "maxPoolThreads": 10,
    "maxQueueSize": 20000,
    "steadyPoolThreads": 2,
    "threadKeepAlive": 60,
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/policy.json 1`] = `
{
  "_id": "policy",
  "additionalFiles": [],
  "file": "policy.js",
  "resources": [
    {
      "calculatedProperties": {
        "source": "require('selfServicePolicies').getRegistrationProperties()",
        "type": "text/javascript",
      },
      "resource": "selfservice/registration",
    },
    {
      "calculatedProperties": {
        "source": "require('selfServicePolicies').getResetProperties()",
        "type": "text/javascript",
      },
      "resource": "selfservice/reset",
    },
    {
      "properties": [
        {
          "name": "_id",
          "policies": [
            {
              "params": {
                "forbiddenChars": [
                  "/",
                ],
              },
              "policyId": "cannot-contain-characters",
            },
          ],
        },
        {
          "name": "password",
          "policies": [
            {
              "params": {
                "minLength": 8,
              },
              "policyId": "minimum-length",
            },
          ],
        },
      ],
      "resource": "internal/user/*",
    },
    {
      "properties": [
        {
          "name": "name",
          "policies": [
            {
              "policyId": "required",
            },
            {
              "policyId": "not-empty",
            },
            {
              "params": {
                "forbiddenChars": [
                  "/*",
                ],
              },
              "policyId": "cannot-contain-characters",
            },
          ],
        },
        {
          "name": "temporalConstraints",
          "policies": [
            {
              "policyId": "valid-temporal-constraints",
            },
          ],
        },
        {
          "name": "condition",
          "policies": [
            {
              "policyId": "valid-query-filter",
            },
          ],
        },
        {
          "name": "privileges",
          "policies": [
            {
              "params": {
                "types": [
                  "array",
                ],
              },
              "policyId": "valid-type",
            },
            {
              "params": {
                "properties": [
                  {
                    "name": "name",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "types": [
                            "string",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                    ],
                  },
                  {
                    "name": "path",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "forbiddenChars": [
                            "/*",
                          ],
                        },
                        "policyId": "cannot-contain-characters",
                      },
                      {
                        "policyId": "valid-privilege-path",
                      },
                    ],
                  },
                  {
                    "name": "accessFlags",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "types": [
                            "array",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                      {
                        "policyId": "valid-accessFlags-object",
                      },
                    ],
                  },
                  {
                    "name": "actions",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "params": {
                          "types": [
                            "array",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                    ],
                  },
                  {
                    "name": "permissions",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "types": [
                            "array",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                      {
                        "policyId": "valid-permissions",
                      },
                    ],
                  },
                  {
                    "name": "filter",
                    "policies": [
                      {
                        "params": {
                          "types": [
                            "string",
                            "null",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                      {
                        "policyId": "valid-query-filter",
                      },
                    ],
                  },
                ],
              },
              "policyId": "valid-array-items",
            },
          ],
        },
      ],
      "resource": "internal/role/*",
    },
    {
      "properties": [
        {
          "name": "temporalConstraints",
          "policies": [
            {
              "policyId": "valid-temporal-constraints",
            },
          ],
        },
        {
          "name": "condition",
          "policies": [
            {
              "policyId": "valid-query-filter",
            },
          ],
        },
      ],
      "resource": "managed/role/*",
    },
  ],
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/privilegeAssignments.json 1`] = `
{
  "_id": "privilegeAssignments",
  "privilegeAssignments": [
    {
      "name": "ownerPrivileges",
      "privileges": [
        "owner-view-update-delete-orgs",
        "owner-create-orgs",
        "owner-view-update-delete-admins-and-members",
        "owner-create-admins",
        "admin-view-update-delete-members",
        "admin-create-members",
      ],
      "relationshipField": "ownerOfOrg",
    },
    {
      "name": "adminPrivileges",
      "privileges": [
        "admin-view-update-delete-orgs",
        "admin-create-orgs",
        "admin-view-update-delete-members",
        "admin-create-members",
      ],
      "relationshipField": "adminOfOrg",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/privileges.json 1`] = `
{
  "_id": "privileges",
  "privileges": [
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
      "name": "owner-view-update-delete-orgs",
      "path": "managed/organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "owner-create-orgs",
      "path": "managed/organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "owner-view-update-delete-admins-and-members",
      "path": "managed/user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
      "name": "owner-create-admins",
      "path": "managed/user",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
      "name": "admin-view-update-delete-orgs",
      "path": "managed/organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "admin-create-orgs",
      "path": "managed/organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "admin-view-update-delete-members",
      "path": "managed/user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
      "name": "admin-create-members",
      "path": "managed/user",
      "permissions": [
        "CREATE",
      ],
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/provisioner.openicf.connectorinfoprovider.json 1`] = `
{
  "_id": "provisioner.openicf.connectorinfoprovider",
  "connectorsLocation": "connectors",
  "remoteConnectorClients": [],
  "remoteConnectorClientsGroups": [],
  "remoteConnectorServers": [],
  "remoteConnectorServersGroups": [],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/repo.ds.json 1`] = `
{
  "_id": "repo.ds",
  "commands": {
    "delete-mapping-links": {
      "_queryFilter": "/linkType eq "\${mapping}"",
      "operation": "DELETE",
    },
    "delete-target-ids-for-recon": {
      "_queryFilter": "/reconId eq "\${reconId}"",
      "operation": "DELETE",
    },
  },
  "embedded": false,
  "ldapConnectionFactories": {
    "bind": {
      "availabilityCheckIntervalSeconds": 30,
      "availabilityCheckTimeoutMilliSeconds": 10000,
      "connectionPoolSize": 50,
      "connectionSecurity": "none",
      "heartBeatIntervalSeconds": 60,
      "heartBeatTimeoutMilliSeconds": 10000,
      "primaryLdapServers": [
        {
          "hostname": "userstore-0.userstore",
          "port": 1389,
        },
      ],
      "secondaryLdapServers": [
        {
          "hostname": "userstore-2.userstore",
          "port": 1389,
        },
      ],
    },
    "root": {
      "authentication": {
        "simple": {
          "bindDn": "uid=admin",
          "bindPassword": "&{userstore.password}",
        },
      },
      "inheritFrom": "bind",
    },
  },
  "maxConnectionAttempts": 5,
  "queries": {
    "explicit": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
    },
    "generic": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "get-by-field-value": {
        "_queryFilter": "/\${field} eq "\${value}"",
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq "\${userId}"",
        "_sortKeys": "-createDate",
      },
      "get-recons": {
        "_fields": "reconId,mapping,activitydate",
        "_queryFilter": "/entryType eq "summary"",
        "_sortKeys": "-activitydate",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq "\${instanceId}"",
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
      },
      "query-cluster-instances": {
        "_queryFilter": "true",
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1",
      },
    },
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
    },
    "explicitMapping": {
      "clusteredrecontargetids": {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-recon-clusteredTargetIds",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-recon-id",
            "type": "simple",
          },
          "targetIds": {
            "ldapAttribute": "fr-idm-recon-targetIds",
            "type": "json",
          },
        },
      },
      "dsconfig/attributeValue": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-attribute-value-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "matchAttribute": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-match-attribute",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/characterSet": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-character-set-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowUnclassifiedCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-allow-unclassified-characters",
            "type": "simple",
          },
          "characterSet": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-character-set",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minCharacterSets": {
            "ldapAttribute": "ds-cfg-min-character-sets",
            "type": "simple",
          },
        },
      },
      "dsconfig/dictionary": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-dictionary-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "dictionaryFile": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-dictionary-file",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/lengthBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-length-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxPasswordLength": {
            "ldapAttribute": "ds-cfg-max-password-length",
            "type": "simple",
          },
          "minPasswordLength": {
            "ldapAttribute": "ds-cfg-min-password-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/passwordPolicies": {
        "dnTemplate": "cn=Password Policies,cn=config",
        "objectClasses": [
          "ds-cfg-password-policy",
          "ds-cfg-authentication-policy",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowPreEncodedPasswords": {
            "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
            "type": "simple",
          },
          "defaultPasswordStorageScheme": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-default-password-storage-scheme",
            "type": "simple",
          },
          "deprecatedPasswordStorageScheme": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
            "type": "simple",
          },
          "maxPasswordAge": {
            "ldapAttribute": "ds-cfg-max-password-age",
            "type": "simple",
          },
          "passwordAttribute": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-password-attribute",
            "type": "simple",
          },
          "passwordHistoryCount": {
            "ldapAttribute": "ds-cfg-password-history-count",
            "type": "simple",
          },
          "validator": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-password-validator",
            "type": "simple",
          },
        },
      },
      "dsconfig/repeatedCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-repeated-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxConsecutiveLength": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-max-consecutive-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/similarityBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-similarity-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minPasswordDifference": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-password-difference",
            "type": "simple",
          },
        },
      },
      "dsconfig/uniqueCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-unique-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minUniqueCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-unique-characters",
            "type": "simple",
          },
        },
      },
      "dsconfig/userDefinedVirtualAttribute": {
        "dnTemplate": "cn=Virtual Attributes,cn=config",
        "objectClasses": [
          "ds-cfg-user-defined-virtual-attribute",
          "ds-cfg-virtual-attribute",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "attributeType": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-attribute-type",
            "type": "simple",
          },
          "baseDn": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-base-dn",
            "type": "simple",
          },
          "conflictBehavior": {
            "ldapAttribute": "ds-cfg-conflict-behavior",
            "type": "simple",
          },
          "enabled": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "filter": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-filter",
            "type": "simple",
          },
          "groupDn": {
            "ldapAttribute": "ds-cfg-group-dn",
            "type": "simple",
          },
          "javaClass": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "scope": {
            "ldapAttribute": "ds-cfg-scope",
            "type": "simple",
          },
          "value": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-value",
            "type": "simple",
          },
        },
      },
      "identities/admin": {
        "dnTemplate": "o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/alpha": {
        "dnTemplate": "o=alpha,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/bravo": {
        "dnTemplate": "o=bravo,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "fr-idm-internal-role",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "authzMembers": {
            "isMultiValued": true,
            "propertyName": "authzRoles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "condition": {
            "ldapAttribute": "fr-idm-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "name": {
            "ldapAttribute": "fr-idm-name",
            "type": "simple",
          },
          "privileges": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-privilege",
            "type": "json",
          },
          "temporalConstraints": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-temporal-constraints",
            "type": "json",
          },
        },
      },
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-internal-user",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "password": {
            "ldapAttribute": "fr-idm-password",
            "type": "json",
          },
        },
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-link",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "firstId": {
            "ldapAttribute": "fr-idm-link-firstId",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-link-qualifier",
            "type": "simple",
          },
          "linkType": {
            "ldapAttribute": "fr-idm-link-type",
            "type": "simple",
          },
          "secondId": {
            "ldapAttribute": "fr-idm-link-secondId",
            "type": "simple",
          },
        },
      },
      "locks": {
        "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-lock",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-lock-nodeid",
            "type": "simple",
          },
        },
      },
      "managed/teammember": {
        "dnTemplate": "ou=people,o=root,ou=identities",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "fraas-admin",
          "iplanet-am-user-service",
          "deviceProfilesContainer",
          "devicePrintProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/teammembermeta",
            "type": "reference",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "inviteDate": {
            "ldapAttribute": "fr-idm-inviteDate",
            "type": "simple",
          },
          "jurisdiction": {
            "ldapAttribute": "fr-idm-jurisdiction",
            "type": "simple",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "onboardDate": {
            "ldapAttribute": "fr-idm-onboardDate",
            "type": "simple",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/teammembergroup": {
        "dnTemplate": "ou=groups,o=root,ou=identities",
        "objectClasses": [
          "groupofuniquenames",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "ldapAttribute": "uniqueMember",
            "type": "simple",
          },
        },
      },
      "recon/assoc": {
        "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
        "namingStrategy": {
          "dnAttribute": "fr-idm-reconassoc-reconid",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "fr-idm-reconassoc",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "fr-idm-reconassoc-reconid",
            "type": "simple",
          },
          "finishTime": {
            "ldapAttribute": "fr-idm-reconassoc-finishtime",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "subResources": {
          "entry": {
            "namingStrategy": {
              "dnAttribute": "uid",
              "type": "clientDnNaming",
            },
            "resource": "recon-assoc-entry",
            "type": "collection",
          },
        },
      },
      "recon/assoc/entry": {
        "objectClasses": [
          "uidObject",
          "fr-idm-reconassocentry",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "action": {
            "ldapAttribute": "fr-idm-reconassocentry-action",
            "type": "simple",
          },
          "ambiguousTargetObjectIds": {
            "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
            "type": "simple",
          },
          "exception": {
            "ldapAttribute": "fr-idm-reconassocentry-exception",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "message": {
            "ldapAttribute": "fr-idm-reconassocentry-message",
            "type": "simple",
          },
          "messageDetail": {
            "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
            "type": "simple",
          },
          "phase": {
            "ldapAttribute": "fr-idm-reconassocentry-phase",
            "type": "simple",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-reconassocentry-reconid",
            "type": "simple",
          },
          "situation": {
            "ldapAttribute": "fr-idm-reconassocentry-situation",
            "type": "simple",
          },
          "sourceObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "status": {
            "ldapAttribute": "fr-idm-reconassocentry-status",
            "type": "simple",
          },
          "targetObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "resourceName": "recon-assoc-entry",
        "subResourceRouting": [
          {
            "prefix": "entry",
            "template": "recon/assoc/{reconId}/entry",
          },
        ],
      },
      "sync/queue": {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-syncqueue",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "context": {
            "ldapAttribute": "fr-idm-syncqueue-context",
            "type": "json",
          },
          "createDate": {
            "ldapAttribute": "fr-idm-syncqueue-createdate",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-syncqueue-mapping",
            "type": "simple",
          },
          "newObject": {
            "ldapAttribute": "fr-idm-syncqueue-newobject",
            "type": "json",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-syncqueue-nodeid",
            "type": "simple",
          },
          "objectRev": {
            "ldapAttribute": "fr-idm-syncqueue-objectRev",
            "type": "simple",
          },
          "oldObject": {
            "ldapAttribute": "fr-idm-syncqueue-oldobject",
            "type": "json",
          },
          "remainingRetries": {
            "ldapAttribute": "fr-idm-syncqueue-remainingretries",
            "type": "simple",
          },
          "resourceCollection": {
            "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
            "type": "simple",
          },
          "resourceId": {
            "ldapAttribute": "fr-idm-syncqueue-resourceid",
            "type": "simple",
          },
          "state": {
            "ldapAttribute": "fr-idm-syncqueue-state",
            "type": "simple",
          },
          "syncAction": {
            "ldapAttribute": "fr-idm-syncqueue-syncaction",
            "type": "simple",
          },
        },
      },
    },
    "genericMapping": {
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
        "objectClasses": [
          "uidObject",
          "fr-idm-cluster-obj",
        ],
      },
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
      },
      "file": {
        "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
      },
      "internal/notification": {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-notification-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-notification",
        ],
        "properties": {
          "target": {
            "propertyName": "_notifications",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "internal/usermeta": {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "jsonstorage": {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
      },
      "managed/alpha_group": {
        "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_organization": {
        "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/alpha_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
        },
      },
      "managed/alpha_role": {
        "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_user": {
        "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/alpha_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/alpha_usermeta": {
        "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_group": {
        "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_organization": {
        "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/bravo_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
        },
      },
      "managed/bravo_role": {
        "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_user": {
        "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/bravo_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/bravo_usermeta": {
        "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/teammembermeta": {
        "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/teammember",
            "type": "reverseReference",
          },
        },
      },
      "reconprogressstate": {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
        "objectClasses": [
          "uidObject",
          "fr-idm-relationship",
        ],
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "ui/*": {
        "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
      },
    },
  },
  "rest2LdapOptions": {
    "mvccAttribute": "etag",
    "readOnUpdatePolicy": "controls",
    "returnNullForMissingProperties": true,
    "useMvcc": true,
    "usePermissiveModify": true,
    "useSubtreeDelete": true,
  },
  "security": {
    "keyManager": "jvm",
    "trustManager": "jvm",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/repo.init.json 1`] = `
{
  "_id": "repo.init",
  "insert": {
    "internal/role": [
      {
        "description": "Administrative access",
        "id": "openidm-admin",
        "name": "openidm-admin",
      },
      {
        "description": "Basic minimum user",
        "id": "openidm-authorized",
        "name": "openidm-authorized",
      },
      {
        "description": "Anonymous access",
        "id": "openidm-reg",
        "name": "openidm-reg",
      },
      {
        "description": "Authenticated via certificate",
        "id": "openidm-cert",
        "name": "openidm-cert",
      },
      {
        "description": "Allowed to reassign workflow tasks",
        "id": "openidm-tasks-manager",
        "name": "openidm-tasks-manager",
      },
      {
        "description": "Platform provisioning access",
        "id": "platform-provisioning",
        "name": "platform-provisioning",
      },
    ],
    "internal/user": [
      {
        "id": "openidm-admin",
        "password": "&{openidm.admin.password}",
      },
      {
        "id": "anonymous",
        "password": "anonymous",
      },
      {
        "id": "idm-provisioning",
      },
      {
        "id": "connector-server-client",
      },
    ],
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/router.json 1`] = `
{
  "_id": "router",
  "filters": [
    {
      "condition": {
        "source": "context.caller.external === true || context.current.name === 'selfservice'",
        "type": "text/javascript",
      },
      "onRequest": {
        "source": "require('fraas-authz').testAccess()",
        "type": "text/javascript",
      },
      "pattern": "^(managed|internal)($|(/.+))",
    },
    {
      "condition": {
        "source": "context.caller.external === true || context.current.name === 'selfservice'",
        "type": "text/javascript",
      },
      "evaluatePrivileges": true,
      "onRequest": {
        "source": "require('router-authz').testAccess()",
        "type": "text/javascript",
      },
    },
    {
      "methods": [
        "create",
        "update",
      ],
      "onRequest": {
        "file": "policyFilter.js",
        "type": "text/javascript",
      },
      "pattern": "^(managed|system|internal)($|(/.+))",
    },
    {
      "condition": {
        "source": "context.caller.external === true && (typeof context.privilege === 'undefined' || Object.keys(context.privilege.matchingPrivileges).length === 0)",
        "type": "text/javascript",
      },
      "onResponse": {
        "source": "require('relationshipFilter').filterResponse()",
        "type": "text/javascript",
      },
      "pattern": "^(managed|internal)($|(/.+))",
    },
    {
      "condition": {
        "source": "require('emailFilter').isAdminTemplate()",
        "type": "text/javascript",
      },
      "methods": [
        "action",
      ],
      "onRequest": {
        "source": "require('emailFilter').handleAdminTemplate()",
        "type": "text/javascript",
      },
      "pattern": "^external/email",
    },
    {
      "methods": [
        "create",
        "patch",
        "read",
        "update",
      ],
      "onRequest": {
        "source": "require('userPropertyConversion').filterRequest();",
        "type": "text/javascript",
      },
      "pattern": "^(repo/managed/alpha_user|repo/managed/bravo_user)($|(/.+))",
    },
    {
      "methods": [
        "create",
        "read",
        "update",
        "delete",
        "patch",
      ],
      "onResponse": {
        "source": "require('userPropertyConversion').filterResponse();",
        "type": "text/javascript",
      },
      "pattern": "^(repo/managed/alpha_user|repo/managed/bravo_user)($|(/.+))",
    },
    {
      "methods": [
        "create",
        "patch",
        "update",
      ],
      "onRequest": {
        "file": "script/checkRequestPropertiesFilter.js",
        "type": "text/javascript",
      },
      "pattern": "^(managed/alpha_user|managed/bravo_user)($|(/.+))",
    },
    {
      "methods": [
        "patch",
        "update",
      ],
      "onRequest": {
        "file": "script/checkSchemaPropertiesFilter.js",
        "type": "text/javascript",
      },
      "pattern": "^config/managed$",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/scheduler.json 1`] = `
{
  "_id": "scheduler",
  "scheduler": {
    "executePersistentSchedules": {
      "$bool": "&{openidm.scheduler.execute.persistent.schedules}",
    },
  },
  "threadPool": {
    "threadCount": 10,
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/script.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/secrets.json 1`] = `
{
  "_id": "secrets",
  "populateDefaults": true,
  "stores": [
    {
      "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
      "config": {
        "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
        "mappings": [
          {
            "aliases": [
              "&{openidm.config.crypto.alias|openidm-sym-default}",
              "openidm-localhost",
            ],
            "secretId": "idm.default",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.alias|openidm-sym-default}",
            ],
            "secretId": "idm.config.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.alias|openidm-sym-default}",
            ],
            "secretId": "idm.password.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.https.keystore.cert.alias|openidm-localhost}",
            ],
            "secretId": "idm.jwt.session.module.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}",
            ],
            "secretId": "idm.jwt.session.module.signing",
            "types": [
              "SIGN",
              "VERIFY",
            ],
          },
          {
            "aliases": [
              "selfservice",
            ],
            "secretId": "idm.selfservice.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}",
            ],
            "secretId": "idm.selfservice.signing",
            "types": [
              "SIGN",
              "VERIFY",
            ],
          },
        ],
        "providerName": "&{openidm.keystore.provider|SunJCE}",
        "storePassword": "&{openidm.keystore.password|changeit}",
        "storetype": "&{openidm.keystore.type|JCEKS}",
      },
      "name": "mainKeyStore",
    },
    {
      "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
      "config": {
        "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
        "mappings": [],
        "providerName": "&{openidm.truststore.provider|SUN}",
        "storePassword": "&{openidm.truststore.password|changeit}",
        "storetype": "&{openidm.truststore.type|JKS}",
      },
      "name": "mainTrustStore",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.kba.json 1`] = `
{
  "_id": "selfservice.kba",
  "kbaPropertyName": "kbaInfo",
  "minimumAnswersToDefine": 1,
  "minimumAnswersToVerify": 1,
  "questions": {
    "1": {
      "en": "What's your favorite color?",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.propertymap.json 1`] = `
{
  "_id": "selfservice.propertymap",
  "properties": [
    {
      "source": "givenName",
      "target": "givenName",
    },
    {
      "source": "familyName",
      "target": "sn",
    },
    {
      "source": "email",
      "target": "mail",
    },
    {
      "condition": "/object/postalAddress  pr",
      "source": "postalAddress",
      "target": "postalAddress",
    },
    {
      "condition": "/object/addressLocality  pr",
      "source": "addressLocality",
      "target": "city",
    },
    {
      "condition": "/object/addressRegion  pr",
      "source": "addressRegion",
      "target": "stateProvince",
    },
    {
      "condition": "/object/postalCode  pr",
      "source": "postalCode",
      "target": "postalCode",
    },
    {
      "condition": "/object/country  pr",
      "source": "country",
      "target": "country",
    },
    {
      "condition": "/object/phone  pr",
      "source": "phone",
      "target": "telephoneNumber",
    },
    {
      "source": "username",
      "target": "userName",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.terms.json 1`] = `
{
  "_id": "selfservice.terms",
  "active": "0.0",
  "uiConfig": {
    "buttonText": "Accept",
    "displayName": "We've updated our terms",
    "purpose": "You must accept the updated terms in order to proceed.",
  },
  "versions": [
    {
      "createDate": "2019-10-28T04:20:11.320Z",
      "termsTranslations": {
        "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      },
      "version": "0.0",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir2 -E test/e2e/env/testEntityFile.json -e test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files 1`] = `""`;

exports[`frodo idm export "frodo idm export -AD testDir2 -E test/e2e/env/testEntityFile.json -e test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir2/repo.ds.json 1`] = `
{
  "_id": "repo.ds",
  "commands": {
    "delete-mapping-links": {
      "_queryFilter": "/linkType eq "\${mapping}"",
      "operation": "DELETE",
    },
    "delete-target-ids-for-recon": {
      "_queryFilter": "/reconId eq "\${reconId}"",
      "operation": "DELETE",
    },
  },
  "embedded": false,
  "ldapConnectionFactories": {
    "bind": {
      "availabilityCheckIntervalSeconds": 30,
      "availabilityCheckTimeoutMilliSeconds": 10000,
      "connectionPoolSize": 50,
      "connectionSecurity": "none",
      "heartBeatIntervalSeconds": 60,
      "heartBeatTimeoutMilliSeconds": 10000,
      "primaryLdapServers": [
        {
          "hostname": "userstore-0.userstore",
          "port": 1389,
        },
      ],
      "secondaryLdapServers": [
        {
          "hostname": "userstore-2.userstore",
          "port": 1389,
        },
      ],
    },
    "root": {
      "authentication": {
        "simple": {
          "bindDn": "\${admin}",
          "bindPassword": "&{userstore.password}",
        },
      },
      "inheritFrom": "bind",
    },
  },
  "maxConnectionAttempts": 5,
  "queries": {
    "explicit": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
    },
    "generic": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "get-by-field-value": {
        "_queryFilter": "/\${field} eq "\${value}"",
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq "\${userId}"",
        "_sortKeys": "-createDate",
      },
      "get-recons": {
        "_fields": "reconId,mapping,activitydate",
        "_queryFilter": "/entryType eq "summary"",
        "_sortKeys": "-activitydate",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq "\${instanceId}"",
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
      },
      "query-cluster-instances": {
        "_queryFilter": "true",
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1",
      },
    },
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
    },
    "explicitMapping": {
      "clusteredrecontargetids": {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-recon-clusteredTargetIds",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-recon-id",
            "type": "simple",
          },
          "targetIds": {
            "ldapAttribute": "fr-idm-recon-targetIds",
            "type": "json",
          },
        },
      },
      "dsconfig/attributeValue": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-attribute-value-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "matchAttribute": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-match-attribute",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/characterSet": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-character-set-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowUnclassifiedCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-allow-unclassified-characters",
            "type": "simple",
          },
          "characterSet": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-character-set",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minCharacterSets": {
            "ldapAttribute": "ds-cfg-min-character-sets",
            "type": "simple",
          },
        },
      },
      "dsconfig/dictionary": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-dictionary-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "dictionaryFile": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-dictionary-file",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/lengthBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-length-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxPasswordLength": {
            "ldapAttribute": "ds-cfg-max-password-length",
            "type": "simple",
          },
          "minPasswordLength": {
            "ldapAttribute": "ds-cfg-min-password-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/passwordPolicies": {
        "dnTemplate": "cn=Password Policies,cn=config",
        "objectClasses": [
          "ds-cfg-password-policy",
          "ds-cfg-authentication-policy",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowPreEncodedPasswords": {
            "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
            "type": "simple",
          },
          "defaultPasswordStorageScheme": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-default-password-storage-scheme",
            "type": "simple",
          },
          "deprecatedPasswordStorageScheme": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
            "type": "simple",
          },
          "maxPasswordAge": {
            "ldapAttribute": "ds-cfg-max-password-age",
            "type": "simple",
          },
          "passwordAttribute": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-password-attribute",
            "type": "simple",
          },
          "passwordHistoryCount": {
            "ldapAttribute": "ds-cfg-password-history-count",
            "type": "simple",
          },
          "validator": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-password-validator",
            "type": "simple",
          },
        },
      },
      "dsconfig/repeatedCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-repeated-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxConsecutiveLength": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-max-consecutive-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/similarityBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-similarity-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minPasswordDifference": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-password-difference",
            "type": "simple",
          },
        },
      },
      "dsconfig/uniqueCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-unique-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minUniqueCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-unique-characters",
            "type": "simple",
          },
        },
      },
      "dsconfig/userDefinedVirtualAttribute": {
        "dnTemplate": "cn=Virtual Attributes,cn=config",
        "objectClasses": [
          "ds-cfg-user-defined-virtual-attribute",
          "ds-cfg-virtual-attribute",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "attributeType": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-attribute-type",
            "type": "simple",
          },
          "baseDn": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-base-dn",
            "type": "simple",
          },
          "conflictBehavior": {
            "ldapAttribute": "ds-cfg-conflict-behavior",
            "type": "simple",
          },
          "enabled": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "filter": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-filter",
            "type": "simple",
          },
          "groupDn": {
            "ldapAttribute": "ds-cfg-group-dn",
            "type": "simple",
          },
          "javaClass": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "scope": {
            "ldapAttribute": "ds-cfg-scope",
            "type": "simple",
          },
          "value": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-value",
            "type": "simple",
          },
        },
      },
      "identities/admin": {
        "dnTemplate": "o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/alpha": {
        "dnTemplate": "o=alpha,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/bravo": {
        "dnTemplate": "o=bravo,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "fr-idm-internal-role",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "authzMembers": {
            "isMultiValued": true,
            "propertyName": "authzRoles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "condition": {
            "ldapAttribute": "fr-idm-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "name": {
            "ldapAttribute": "fr-idm-name",
            "type": "simple",
          },
          "privileges": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-privilege",
            "type": "json",
          },
          "temporalConstraints": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-temporal-constraints",
            "type": "json",
          },
        },
      },
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-internal-user",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "password": {
            "ldapAttribute": "fr-idm-password",
            "type": "json",
          },
        },
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-link",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "firstId": {
            "ldapAttribute": "fr-idm-link-firstId",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-link-qualifier",
            "type": "simple",
          },
          "linkType": {
            "ldapAttribute": "fr-idm-link-type",
            "type": "simple",
          },
          "secondId": {
            "ldapAttribute": "fr-idm-link-secondId",
            "type": "simple",
          },
        },
      },
      "locks": {
        "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-lock",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-lock-nodeid",
            "type": "simple",
          },
        },
      },
      "managed/teammember": {
        "dnTemplate": "ou=people,o=root,ou=identities",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "fraas-admin",
          "iplanet-am-user-service",
          "deviceProfilesContainer",
          "devicePrintProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/teammembermeta",
            "type": "reference",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "inviteDate": {
            "ldapAttribute": "fr-idm-inviteDate",
            "type": "simple",
          },
          "jurisdiction": {
            "ldapAttribute": "fr-idm-jurisdiction",
            "type": "simple",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "onboardDate": {
            "ldapAttribute": "fr-idm-onboardDate",
            "type": "simple",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/teammembergroup": {
        "dnTemplate": "ou=groups,o=root,ou=identities",
        "objectClasses": [
          "groupofuniquenames",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "ldapAttribute": "uniqueMember",
            "type": "simple",
          },
        },
      },
      "recon/assoc": {
        "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
        "namingStrategy": {
          "dnAttribute": "fr-idm-reconassoc-reconid",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "fr-idm-reconassoc",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "fr-idm-reconassoc-reconid",
            "type": "simple",
          },
          "finishTime": {
            "ldapAttribute": "fr-idm-reconassoc-finishtime",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "subResources": {
          "entry": {
            "namingStrategy": {
              "dnAttribute": "uid",
              "type": "clientDnNaming",
            },
            "resource": "recon-assoc-entry",
            "type": "collection",
          },
        },
      },
      "recon/assoc/entry": {
        "objectClasses": [
          "uidObject",
          "fr-idm-reconassocentry",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "action": {
            "ldapAttribute": "fr-idm-reconassocentry-action",
            "type": "simple",
          },
          "ambiguousTargetObjectIds": {
            "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
            "type": "simple",
          },
          "exception": {
            "ldapAttribute": "fr-idm-reconassocentry-exception",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "message": {
            "ldapAttribute": "fr-idm-reconassocentry-message",
            "type": "simple",
          },
          "messageDetail": {
            "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
            "type": "simple",
          },
          "phase": {
            "ldapAttribute": "fr-idm-reconassocentry-phase",
            "type": "simple",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-reconassocentry-reconid",
            "type": "simple",
          },
          "situation": {
            "ldapAttribute": "fr-idm-reconassocentry-situation",
            "type": "simple",
          },
          "sourceObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "status": {
            "ldapAttribute": "fr-idm-reconassocentry-status",
            "type": "simple",
          },
          "targetObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "resourceName": "recon-assoc-entry",
        "subResourceRouting": [
          {
            "prefix": "entry",
            "template": "recon/assoc/{reconId}/entry",
          },
        ],
      },
      "sync/queue": {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-syncqueue",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "context": {
            "ldapAttribute": "fr-idm-syncqueue-context",
            "type": "json",
          },
          "createDate": {
            "ldapAttribute": "fr-idm-syncqueue-createdate",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-syncqueue-mapping",
            "type": "simple",
          },
          "newObject": {
            "ldapAttribute": "fr-idm-syncqueue-newobject",
            "type": "json",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-syncqueue-nodeid",
            "type": "simple",
          },
          "objectRev": {
            "ldapAttribute": "fr-idm-syncqueue-objectRev",
            "type": "simple",
          },
          "oldObject": {
            "ldapAttribute": "fr-idm-syncqueue-oldobject",
            "type": "json",
          },
          "remainingRetries": {
            "ldapAttribute": "fr-idm-syncqueue-remainingretries",
            "type": "simple",
          },
          "resourceCollection": {
            "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
            "type": "simple",
          },
          "resourceId": {
            "ldapAttribute": "fr-idm-syncqueue-resourceid",
            "type": "simple",
          },
          "state": {
            "ldapAttribute": "fr-idm-syncqueue-state",
            "type": "simple",
          },
          "syncAction": {
            "ldapAttribute": "fr-idm-syncqueue-syncaction",
            "type": "simple",
          },
        },
      },
    },
    "genericMapping": {
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
        "objectClasses": [
          "uidObject",
          "fr-idm-cluster-obj",
        ],
      },
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
      },
      "file": {
        "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
      },
      "internal/notification": {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-notification-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-notification",
        ],
        "properties": {
          "target": {
            "propertyName": "_notifications",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "internal/usermeta": {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "jsonstorage": {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
      },
      "managed/alpha_group": {
        "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_organization": {
        "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/alpha_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
        },
      },
      "managed/alpha_role": {
        "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_user": {
        "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/alpha_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/alpha_usermeta": {
        "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_group": {
        "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_organization": {
        "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/bravo_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
        },
      },
      "managed/bravo_role": {
        "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_user": {
        "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/bravo_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/bravo_usermeta": {
        "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/teammembermeta": {
        "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/teammember",
            "type": "reverseReference",
          },
        },
      },
      "reconprogressstate": {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
        "objectClasses": [
          "uidObject",
          "fr-idm-relationship",
        ],
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "ui/*": {
        "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
      },
    },
  },
  "rest2LdapOptions": {
    "mvccAttribute": "etag",
    "readOnUpdatePolicy": "controls",
    "returnNullForMissingProperties": true,
    "useMvcc": true,
    "usePermissiveModify": true,
    "useSubtreeDelete": true,
  },
  "security": {
    "keyManager": "jvm",
    "trustManager": "jvm",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir2 -E test/e2e/env/testEntityFile.json -e test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir2/script.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": "\${groovy}",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{\${installDir}}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{\${installDir}}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{\${installDir}}/bin/defaults/script",
    },
    "install": {
      "directory": "&{\${installDir}}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -N script -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json 1`] = `""`;

exports[`frodo idm export "frodo idm export -N script -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json: ./my-script.idm.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -SN script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4 1`] = `""`;

exports[`frodo idm export "frodo idm export -SN script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4: testDir4/script.idm.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;
